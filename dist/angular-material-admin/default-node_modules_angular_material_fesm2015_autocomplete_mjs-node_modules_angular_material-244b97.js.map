{"version":3,"file":"default-node_modules_angular_material_fesm2015_autocomplete_mjs-node_modules_angular_material-244b97.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2015/autocomplete.mjs","./node_modules/@angular/material/fesm2015/datepicker.mjs","./node_modules/@angular/material/fesm2015/radio.mjs","./node_modules/@angular/material/fesm2015/slider.mjs"],"sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, TemplateRef, Directive, Inject, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport * as i1 from '@angular/cdk/platform';\nimport { _getEventTarget } from '@angular/cdk/platform';\nimport * as i2 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i4 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nconst _MatAutocompleteMixinBase = mixinDisableRipple(class {\n});\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults, platform) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        // TODO(crisbeto): the problem that the `inertGroups` option resolves is only present on\n        // Safari using VoiceOver. We should occasionally check back to see whether the bug\n        // wasn't resolved in VoiceOver, and if it has, we can remove this and the `inertGroups`\n        // option altogether.\n        this.inertGroups = (platform === null || platform === void 0 ? void 0 : platform.SAFARI) || false;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() {\n        return this._isOpen && this.showPanel;\n    }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() {\n        return this._autoActiveFirstOption;\n    }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = coerceStringArray(value).reduce((classList, className) => {\n                classList[className] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            if (this.isOpen) {\n                this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n            }\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Gets the aria-labelledby for the autocomplete panel. */\n    _getPanelAriaLabelledby(labelId) {\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatAutocompleteBase, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS }, { token: i1.Platform }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatAutocompleteBase, inputs: { ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", panelWidth: \"panelWidth\", classList: [\"class\", \"classList\"] }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, viewQueries: [{ propertyName: \"template\", first: true, predicate: TemplateRef, descendants: true, static: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatAutocompleteBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }, { type: i1.Platform }];\n    }, propDecorators: { template: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], displayWith: [{\n                type: Input\n            }], autoActiveFirstOption: [{\n                type: Input\n            }], panelWidth: [{\n                type: Input\n            }], optionSelected: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], closed: [{\n                type: Output\n            }], optionActivated: [{\n                type: Output\n            }], classList: [{\n                type: Input,\n                args: ['class']\n            }] } });\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocomplete, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatAutocomplete.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatAutocomplete, selector: \"mat-autocomplete\", inputs: { disableRipple: \"disableRipple\" }, host: { classAttribute: \"mat-autocomplete\" }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], queries: [{ propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }], exportAs: [\"matAutocomplete\"], usesInheritance: true, ngImport: i0, template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocomplete, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-autocomplete', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, exportAs: 'matAutocomplete', inputs: ['disableRipple'], host: {\n                        'class': 'mat-autocomplete',\n                    }, providers: [{ provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }], template: \"<ng-template let-formFieldId=\\\"id\\\">\\n  <div class=\\\"mat-autocomplete-panel\\\"\\n       role=\\\"listbox\\\"\\n       [id]=\\\"id\\\"\\n       [attr.aria-label]=\\\"ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby(formFieldId)\\\"\\n       [ngClass]=\\\"_classList\\\"\\n       #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}mat-autocomplete{display:none}\\n\"] }]\n        }], propDecorators: { optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }] } });\n\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true,\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        \"you're attempting to open it after the ngAfterContentInit hook.\");\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler, _defaults) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._defaults = _defaults;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable.pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() {\n        return this._autocompleteDisabled;\n    }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef\n            ? this._overlayRef.detachments().pipe(filter(() => this._overlayAttached))\n            : of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => (event instanceof MatOptionSelectionChange ? event : null)));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'auxclick'), fromEvent(this._document, 'touchend')).pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = _getEventTarget(event);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return (this._overlayAttached &&\n                clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                !!this._overlayRef &&\n                !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return (merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event)));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith\n            ? this.autocomplete.displayWith(value)\n            : value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        var _a;\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef, {\n                id: (_a = this._formField) === null || _a === void 0 ? void 0 : _a.getLabelId(),\n            });\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._closeKeyEventStream.next();\n                    this._resetActiveItem();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        var _a;\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir,\n            panelClass: (_a = this._defaults) === null || _a === void 0 ? void 0 : _a.overlayPanelClass,\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass },\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        const autocomplete = this.autocomplete;\n        if (autocomplete.autoActiveFirstOption) {\n            // Note that we go through `setFirstItemActive`, rather than `setActiveItem(0)`, because\n            // the former will find the next enabled option, if the first one is disabled.\n            autocomplete._keyManager.setFirstItemActive();\n        }\n        else {\n            autocomplete._keyManager.setActiveItem(-1);\n        }\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else if (autocomplete.panel) {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, deps: [{ token: i0.ElementRef }, { token: i1$1.Overlay }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: MAT_AUTOCOMPLETE_SCROLL_STRATEGY }, { token: i2$1.Directionality, optional: true }, { token: MAT_FORM_FIELD, host: true, optional: true }, { token: DOCUMENT, optional: true }, { token: i3.ViewportRuler }, { token: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteTriggerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatAutocompleteTriggerBase, inputs: { autocomplete: [\"matAutocomplete\", \"autocomplete\"], position: [\"matAutocompletePosition\", \"position\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"] }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatAutocompleteTriggerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.Overlay }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n                    }] }, { type: i2$1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }, {\n                        type: Host\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { autocomplete: [{\n                type: Input,\n                args: ['matAutocomplete']\n            }], position: [{\n                type: Input,\n                args: ['matAutocompletePosition']\n            }], connectedTo: [{\n                type: Input,\n                args: ['matAutocompleteConnectedTo']\n            }], autocompleteAttribute: [{\n                type: Input,\n                args: ['autocomplete']\n            }], autocompleteDisabled: [{\n                type: Input,\n                args: ['matAutocompleteDisabled']\n            }] } });\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteTrigger, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatAutocompleteTrigger, selector: \"input[matAutocomplete], textarea[matAutocomplete]\", host: { listeners: { \"focusin\": \"_handleFocus()\", \"blur\": \"_onTouched()\", \"input\": \"_handleInput($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.autocomplete\": \"autocompleteAttribute\", \"attr.role\": \"autocompleteDisabled ? null : \\\"combobox\\\"\", \"attr.aria-autocomplete\": \"autocompleteDisabled ? null : \\\"list\\\"\", \"attr.aria-activedescendant\": \"(panelOpen && activeOption) ? activeOption.id : null\", \"attr.aria-expanded\": \"autocompleteDisabled ? null : panelOpen.toString()\", \"attr.aria-owns\": \"(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id\", \"attr.aria-haspopup\": \"!autocompleteDisabled\" }, classAttribute: \"mat-autocomplete-trigger\" }, providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR], exportAs: [\"matAutocompleteTrigger\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                    host: {\n                        'class': 'mat-autocomplete-trigger',\n                        '[attr.autocomplete]': 'autocompleteAttribute',\n                        '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                        '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                        '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                        '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                        '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                        '[attr.aria-haspopup]': '!autocompleteDisabled',\n                        // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                        // a little earlier. This avoids issues where IE delays the focusing of the input.\n                        '(focusin)': '_handleFocus()',\n                        '(blur)': '_onTouched()',\n                        '(input)': '_handleInput($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                    exportAs: 'matAutocompleteTrigger',\n                    providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatAutocompleteOriginBase, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatAutocompleteOriginBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatAutocompleteOriginBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatAutocompleteOriginBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteOrigin, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatAutocompleteOrigin.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatAutocompleteOrigin, selector: \"[matAutocompleteOrigin]\", exportAs: [\"matAutocompleteOrigin\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteOrigin, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matAutocompleteOrigin]',\n                    exportAs: 'matAutocompleteOrigin',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatAutocompleteModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteModule, declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin], imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule], exports: [MatAutocomplete,\n        MatAutocompleteTrigger,\n        MatAutocompleteOrigin,\n        CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\nMatAutocompleteModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteModule, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[OverlayModule, MatOptionModule, MatCommonModule, CommonModule], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatAutocompleteModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatOptionModule, MatCommonModule, CommonModule],\n                    exports: [\n                        MatAutocomplete,\n                        MatAutocompleteTrigger,\n                        MatAutocompleteOrigin,\n                        CdkScrollableModule,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                    providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n","import * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i9 from '@angular/cdk/overlay';\nimport { Overlay, FlexibleConnectedPositionStrategy, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/cdk/portal';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Injectable, Optional, SkipSelf, InjectionToken, Inject, ViewChild, forwardRef, Directive, Attribute, ContentChild, InjectFlags, Self, TemplateRef, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i1$1 from '@angular/material/core';\nimport { DateAdapter, MAT_DATE_FORMATS, mixinColor, mixinErrorState, MatCommonModule } from '@angular/material/core';\nimport { Subject, Subscription, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW, BACKSPACE } from '@angular/cdk/keycodes';\nimport { take, startWith, filter } from 'rxjs/operators';\nimport * as i2 from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceStringArray } from '@angular/cdk/coercion';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { trigger, transition, animate, keyframes, style, state } from '@angular/animations';\nimport * as i2$2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, Validators, NgControl } from '@angular/forms';\nimport * as i2$1 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from '@angular/material/form-field';\nimport { MAT_INPUT_VALUE_ACCESSOR } from '@angular/material/input';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction createMissingDateImplError(provider) {\n    return Error(`MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n        `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n        `custom implementation.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nclass MatCalendarCell {\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\n        this.value = value;\n        this.displayValue = displayValue;\n        this.ariaLabel = ariaLabel;\n        this.enabled = enabled;\n        this.cssClasses = cssClasses;\n        this.compareValue = compareValue;\n        this.rawValue = rawValue;\n    }\n}\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\nclass MatCalendarBody {\n    constructor(_elementRef, _ngZone) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /** The number of columns in the table. */\n        this.numCols = 7;\n        /** The cell number of the active cell in the table. */\n        this.activeCell = 0;\n        /** Whether a range is being selected. */\n        this.isRange = false;\n        /**\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n         * maintained even as the table resizes.\n         */\n        this.cellAspectRatio = 1;\n        /** Start of the preview range. */\n        this.previewStart = null;\n        /** End of the preview range. */\n        this.previewEnd = null;\n        /** Emits when a new value is selected. */\n        this.selectedValueChange = new EventEmitter();\n        /** Emits when the preview has changed as a result of a user action. */\n        this.previewChange = new EventEmitter();\n        /**\n         * Event handler for when the user enters an element\n         * inside the calendar body (e.g. by hovering in or focus).\n         */\n        this._enterHandler = (event) => {\n            if (this._skipNextFocus && event.type === 'focus') {\n                this._skipNextFocus = false;\n                return;\n            }\n            // We only need to hit the zone when we're selecting a range.\n            if (event.target && this.isRange) {\n                const cell = this._getCellFromElement(event.target);\n                if (cell) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\n                }\n            }\n        };\n        /**\n         * Event handler for when the user's pointer leaves an element\n         * inside the calendar body (e.g. by hovering out or blurring).\n         */\n        this._leaveHandler = (event) => {\n            // We only need to hit the zone when we're selecting a range.\n            if (this.previewEnd !== null && this.isRange) {\n                // Only reset the preview end value when leaving cells. This looks better, because\n                // we have a gap between the cells and the rows and we don't want to remove the\n                // range just for it to show up again when the user moves a few pixels to the side.\n                if (event.target && isTableCell(event.target)) {\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\n                }\n            }\n        };\n        _ngZone.runOutsideAngular(() => {\n            const element = _elementRef.nativeElement;\n            element.addEventListener('mouseenter', this._enterHandler, true);\n            element.addEventListener('focus', this._enterHandler, true);\n            element.addEventListener('mouseleave', this._leaveHandler, true);\n            element.addEventListener('blur', this._leaveHandler, true);\n        });\n    }\n    /** Called when a cell is clicked. */\n    _cellClicked(cell, event) {\n        if (cell.enabled) {\n            this.selectedValueChange.emit({ value: cell.value, event });\n        }\n    }\n    /** Returns whether a cell should be marked as selected. */\n    _isSelected(value) {\n        return this.startValue === value || this.endValue === value;\n    }\n    ngOnChanges(changes) {\n        const columnChanges = changes['numCols'];\n        const { rows, numCols } = this;\n        if (changes['rows'] || columnChanges) {\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n            this._cellPadding = `${(50 * this.cellAspectRatio) / numCols}%`;\n        }\n        if (columnChanges || !this._cellWidth) {\n            this._cellWidth = `${100 / numCols}%`;\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mouseenter', this._enterHandler, true);\n        element.removeEventListener('focus', this._enterHandler, true);\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\n        element.removeEventListener('blur', this._leaveHandler, true);\n    }\n    /** Returns whether a cell is active. */\n    _isActiveCell(rowIndex, colIndex) {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this._firstRowOffset;\n        }\n        return cellNumber == this.activeCell;\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview = true) {\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                const activeCell = this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n                if (activeCell) {\n                    if (!movePreview) {\n                        this._skipNextFocus = true;\n                    }\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n    /** Gets whether a value is the start of the main range. */\n    _isRangeStart(value) {\n        return isStart(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is the end of the main range. */\n    _isRangeEnd(value) {\n        return isEnd(value, this.startValue, this.endValue);\n    }\n    /** Gets whether a value is within the currently-selected range. */\n    _isInRange(value) {\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\n    }\n    /** Gets whether a value is the start of the comparison range. */\n    _isComparisonStart(value) {\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let previousCell = this.rows[rowIndex][colIndex - 1];\n        if (!previousCell) {\n            const previousRow = this.rows[rowIndex - 1];\n            previousCell = previousRow && previousRow[previousRow.length - 1];\n        }\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\n    }\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n            return false;\n        }\n        let nextCell = this.rows[rowIndex][colIndex + 1];\n        if (!nextCell) {\n            const nextRow = this.rows[rowIndex + 1];\n            nextCell = nextRow && nextRow[0];\n        }\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\n    }\n    /** Gets whether a value is the end of the comparison range. */\n    _isComparisonEnd(value) {\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\n    }\n    /** Gets whether a value is within the current comparison range. */\n    _isInComparisonRange(value) {\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n    }\n    /**\n     * Gets whether a value is the same as the start and end of the comparison range.\n     * For context, the functions that we use to determine whether something is the start/end of\n     * a range don't allow for the start and end to be on the same day, because we'd have to use\n     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n     * the regular range, because when it happens, the selected styles take over and still show where\n     * the range would've been, however we don't have these selected styles for a comparison range.\n     * This function is used to apply a class that serves the same purpose as the one for selected\n     * dates, but it only applies in the context of a comparison range.\n     */\n    _isComparisonIdentical(value) {\n        // Note that we don't need to null check the start/end\n        // here, because the `value` will always be defined.\n        return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n    }\n    /** Gets whether a value is the start of the preview range. */\n    _isPreviewStart(value) {\n        return isStart(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is the end of the preview range. */\n    _isPreviewEnd(value) {\n        return isEnd(value, this.previewStart, this.previewEnd);\n    }\n    /** Gets whether a value is inside the preview range. */\n    _isInPreview(value) {\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n    }\n    /** Finds the MatCalendarCell that corresponds to a DOM node. */\n    _getCellFromElement(element) {\n        let cell;\n        if (isTableCell(element)) {\n            cell = element;\n        }\n        else if (isTableCell(element.parentNode)) {\n            cell = element.parentNode;\n        }\n        if (cell) {\n            const row = cell.getAttribute('data-mat-row');\n            const col = cell.getAttribute('data-mat-col');\n            if (row && col) {\n                return this.rows[parseInt(row)][parseInt(col)];\n            }\n        }\n        return null;\n    }\n}\nMatCalendarBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarBody, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: { label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", previewStart: \"previewStart\", previewEnd: \"previewEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, host: { classAttribute: \"mat-calendar-body\" }, exportAs: [\"matCalendarBody\"], usesOnChanges: true, ngImport: i0, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarBody, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-calendar-body]', host: {\n                        'class': 'mat-calendar-body',\n                    }, exportAs: 'matCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!--\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\n-->\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\n  <td class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"numCols\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{label}}\\n  </td>\\n</tr>\\n\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\n  <!--\\n    This cell is purely decorative, but we can't put `aria-hidden` or `role=\\\"presentation\\\"` on it,\\n    because it throws off the week days for the rest of the row on NVDA. The aspect ratio of the\\n    table cells is maintained by setting the top and bottom padding as a percentage of the width\\n    (a variant of the trick described here: https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\n  -->\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\n      class=\\\"mat-calendar-body-label\\\"\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\n  </td>\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\n      role=\\\"gridcell\\\"\\n      class=\\\"mat-calendar-body-cell\\\"\\n      [ngClass]=\\\"item.cssClasses\\\"\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\n      [attr.aria-selected]=\\\"_isSelected(item.compareValue)\\\"\\n      [attr.aria-current]=\\\"todayValue === item.compareValue ? 'date' : null\\\"\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\n      [style.width]=\\\"_cellWidth\\\"\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item.compareValue)\\\"\\n        [class.mat-calendar-body-comparison-identical]=\\\"_isComparisonIdentical(item.compareValue)\\\"\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\n        {{item.displayValue}}\\n      </div>\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\n  </td>\\n</tr>\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.cdk-high-contrast-active .mat-calendar-body-disabled{opacity:.5}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-cell:not(.mat-calendar-body-in-range) .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}.cdk-high-contrast-active .mat-calendar-body-cell::before,.cdk-high-contrast-active .mat-calendar-body-cell::after,.cdk-high-contrast-active .mat-calendar-body-selected{background:none}.cdk-high-contrast-active .mat-calendar-body-in-range::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-start::before,.cdk-high-contrast-active .mat-calendar-body-comparison-bridge-end::before{border-top:solid 1px;border-bottom:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-start::before{border-left:0;border-right:solid 1px}.cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:solid 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-range-end::before{border-right:0;border-left:solid 1px}.cdk-high-contrast-active .mat-calendar-body-in-comparison-range::before{border-top:dashed 1px;border-bottom:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-start::before{border-left:0;border-right:dashed 1px}.cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:dashed 1px}[dir=rtl] .cdk-high-contrast-active .mat-calendar-body-comparison-end::before{border-right:0;border-left:dashed 1px}[dir=rtl] .mat-calendar-body-label{text-align:right}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { label: [{\n                type: Input\n            }], rows: [{\n                type: Input\n            }], todayValue: [{\n                type: Input\n            }], startValue: [{\n                type: Input\n            }], endValue: [{\n                type: Input\n            }], labelMinRequiredCells: [{\n                type: Input\n            }], numCols: [{\n                type: Input\n            }], activeCell: [{\n                type: Input\n            }], isRange: [{\n                type: Input\n            }], cellAspectRatio: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], previewStart: [{\n                type: Input\n            }], previewEnd: [{\n                type: Input\n            }], selectedValueChange: [{\n                type: Output\n            }], previewChange: [{\n                type: Output\n            }] } });\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node) {\n    return node.nodeName === 'TD';\n}\n/** Checks whether a value is the start of a range. */\nfunction isStart(value, start, end) {\n    return end !== null && start !== end && value < end && value === start;\n}\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value, start, end) {\n    return start !== null && start !== end && value >= start && value === end;\n}\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value, start, end, rangeEnabled) {\n    return (rangeEnabled &&\n        start !== null &&\n        end !== null &&\n        start !== end &&\n        value >= start &&\n        value <= end);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** A class representing a range of dates. */\nclass DateRange {\n    constructor(\n    /** The start date of the range. */\n    start, \n    /** The end date of the range. */\n    end) {\n        this.start = start;\n        this.end = end;\n    }\n}\n/**\n * A selection model containing a date selection.\n * @docs-private\n */\nclass MatDateSelectionModel {\n    constructor(\n    /** The current selection. */\n    selection, _adapter) {\n        this.selection = selection;\n        this._adapter = _adapter;\n        this._selectionChanged = new Subject();\n        /** Emits when the selection has changed. */\n        this.selectionChanged = this._selectionChanged;\n        this.selection = selection;\n    }\n    /**\n     * Updates the current selection in the model.\n     * @param value New selection that should be assigned.\n     * @param source Object that triggered the selection change.\n     */\n    updateSelection(value, source) {\n        const oldValue = this.selection;\n        this.selection = value;\n        this._selectionChanged.next({ selection: value, source, oldValue });\n    }\n    ngOnDestroy() {\n        this._selectionChanged.complete();\n    }\n    _isValidDateInstance(date) {\n        return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n    }\n}\nMatDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateSelectionModel, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Injectable });\nMatDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined }, { type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a single date.\n * @docs-private\n */\nclass MatSingleDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(null, adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a single date selection, the added date\n     * simply overwrites the previous selection\n     */\n    add(date) {\n        super.updateSelection(date, this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        return this.selection != null && this._isValidDateInstance(this.selection);\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a single date selection, this\n     * is true if the current selection is not null.\n     */\n    isComplete() {\n        return this.selection != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatSingleDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatSingleDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSingleDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatSingleDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSingleDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSingleDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/**\n * A selection model that contains a date range.\n * @docs-private\n */\nclass MatRangeDateSelectionModel extends MatDateSelectionModel {\n    constructor(adapter) {\n        super(new DateRange(null, null), adapter);\n    }\n    /**\n     * Adds a date to the current selection. In the case of a date range selection, the added date\n     * fills in the next `null` value in the range. If both the start and the end already have a date,\n     * the selection is reset so that the given date is the new `start` and the `end` is null.\n     */\n    add(date) {\n        let { start, end } = this.selection;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        super.updateSelection(new DateRange(start, end), this);\n    }\n    /** Checks whether the current selection is valid. */\n    isValid() {\n        const { start, end } = this.selection;\n        // Empty ranges are valid.\n        if (start == null && end == null) {\n            return true;\n        }\n        // Complete ranges are only valid if both dates are valid and the start is before the end.\n        if (start != null && end != null) {\n            return (this._isValidDateInstance(start) &&\n                this._isValidDateInstance(end) &&\n                this._adapter.compareDate(start, end) <= 0);\n        }\n        // Partial ranges are valid if the start/end is valid.\n        return ((start == null || this._isValidDateInstance(start)) &&\n            (end == null || this._isValidDateInstance(end)));\n    }\n    /**\n     * Checks whether the current selection is complete. In the case of a date range selection, this\n     * is true if the current selection has a non-null `start` and `end`.\n     */\n    isComplete() {\n        return this.selection.start != null && this.selection.end != null;\n    }\n    /** Clones the selection model. */\n    clone() {\n        const clone = new MatRangeDateSelectionModel(this._adapter);\n        clone.updateSelection(this.selection, this);\n        return clone;\n    }\n}\nMatRangeDateSelectionModel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRangeDateSelectionModel, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nMatRangeDateSelectionModel.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRangeDateSelectionModel });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRangeDateSelectionModel, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatSingleDateSelectionModel(adapter);\n}\n/**\n * Used to provide a single selection model to a component.\n * @docs-private\n */\nconst MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n/** @docs-private */\nfunction MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {\n    return parent || new MatRangeDateSelectionModel(adapter);\n}\n/**\n * Used to provide a range selection model to a component.\n * @docs-private\n */\nconst MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {\n    provide: MatDateSelectionModel,\n    deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n    useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token used to customize the date range selection behavior. */\nconst MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('MAT_DATE_RANGE_SELECTION_STRATEGY');\n/** Provides the default date range selection behavior. */\nclass DefaultMatCalendarRangeStrategy {\n    constructor(_dateAdapter) {\n        this._dateAdapter = _dateAdapter;\n    }\n    selectionFinished(date, currentRange) {\n        let { start, end } = currentRange;\n        if (start == null) {\n            start = date;\n        }\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n            end = date;\n        }\n        else {\n            start = date;\n            end = null;\n        }\n        return new DateRange(start, end);\n    }\n    createPreview(activeDate, currentRange) {\n        let start = null;\n        let end = null;\n        if (currentRange.start && !currentRange.end && activeDate) {\n            start = currentRange.start;\n            end = activeDate;\n        }\n        return new DateRange(start, end);\n    }\n}\nDefaultMatCalendarRangeStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, deps: [{ token: i1$1.DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nDefaultMatCalendarRangeStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: DefaultMatCalendarRangeStrategy, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.DateAdapter }]; } });\n/** @docs-private */\nfunction MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {\n    return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n/** @docs-private */\nconst MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {\n    provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n    deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n    useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nclass MatMonthView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rangeStrategy = _rangeStrategy;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new date is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        const oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setRanges(this._selected);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnChanges(changes) {\n        const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n        if (comparisonChange && !comparisonChange.firstChange) {\n            this._setRanges(this.selected);\n        }\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new date is selected. */\n    _dateSelected(event) {\n        const date = event.value;\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n        let rangeStartDate;\n        let rangeEndDate;\n        if (this._selected instanceof DateRange) {\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n        }\n        else {\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n        }\n        if (rangeStartDate !== date || rangeEndDate !== date) {\n            this.selectedChange.emit(selectedDate);\n        }\n        this._userSelection.emit({ value: selectedDate, event: event.event });\n        this._previewStart = this._previewEnd = null;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n                    this._dateAdapter.getDate(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, -1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey\n                    ? this._dateAdapter.addCalendarYears(this._activeDate, 1)\n                    : this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this._selectionKeyPressed = true;\n                if (this._canSelect(this._activeDate)) {\n                    // Prevent unexpected default actions such as form submission.\n                    // Note that we only prevent the default action here while the selection happens in\n                    // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                    // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                    // because it's too late (see #23305).\n                    event.preventDefault();\n                }\n                return;\n            case ESCAPE:\n                // Abort the current range selection if the user presses escape mid-selection.\n                if (this._previewEnd != null && !hasModifierKey(event)) {\n                    this._previewStart = this._previewEnd = null;\n                    this.selectedChange.emit(null);\n                    this._userSelection.emit({ value: null, event });\n                    event.preventDefault();\n                    event.stopPropagation(); // Prevents the overlay from closing.\n                }\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in month view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed && this._canSelect(this._activeDate)) {\n                this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this month view. */\n    _init() {\n        this._setRanges(this.selected);\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n        this._monthLabel = this._dateFormats.display.monthLabel\n            ? this._dateAdapter.format(this.activeDate, this._dateFormats.display.monthLabel)\n            : this._dateAdapter\n                .getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\n        this._firstWeekOffset =\n            (DAYS_PER_WEEK +\n                this._dateAdapter.getDayOfWeek(firstOfMonth) -\n                this._dateAdapter.getFirstDayOfWeek()) %\n                DAYS_PER_WEEK;\n        this._initWeekdays();\n        this._createWeekCells();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(movePreview) {\n        this._matCalendarBody._focusActiveCell(movePreview);\n    }\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\n    _previewChanged({ event, value: cell }) {\n        if (this._rangeStrategy) {\n            // We can assume that this will be a range, because preview\n            // events aren't fired for single date selections.\n            const value = cell ? cell.rawValue : null;\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\n            this._previewStart = this._getCellCompareValue(previewRange.start);\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n            // when navigating one month back using the keyboard which will cause this handler\n            // to throw a \"changed after checked\" error when updating the preview state.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Initializes the weekdays. */\n    _initWeekdays() {\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        let weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n    }\n    /** Creates MatCalendarCells for the dates in this month. */\n    _createWeekCells() {\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this._dateAdapter.getDateNames();\n        this._weeks = [[]];\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell == DAYS_PER_WEEK) {\n                this._weeks.push([]);\n                cell = 0;\n            }\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this._shouldEnableDate(date);\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n            this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\n        }\n    }\n    /** Date filter for the month */\n    _shouldEnableDate(date) {\n        return (!!date &&\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n            (!this.dateFilter || this.dateFilter(date)));\n    }\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    _getDateInCurrentMonth(date) {\n        return date && this._hasSameMonthAndYear(date, this.activeDate)\n            ? this._dateAdapter.getDate(date)\n            : null;\n    }\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    _hasSameMonthAndYear(d1, d2) {\n        return !!(d1 &&\n            d2 &&\n            this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n    }\n    /** Gets the value that will be used to one cell to another. */\n    _getCellCompareValue(date) {\n        if (date) {\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\n            // cell values, because we need to support ranges that span across multiple months/years.\n            const year = this._dateAdapter.getYear(date);\n            const month = this._dateAdapter.getMonth(date);\n            const day = this._dateAdapter.getDate(date);\n            return new Date(year, month, day).getTime();\n        }\n        return null;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the current range based on a model value. */\n    _setRanges(selectedValue) {\n        if (selectedValue instanceof DateRange) {\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n            this._isRange = true;\n        }\n        else {\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n            this._isRange = false;\n        }\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n    }\n    /** Gets whether a date can be selected in the month view. */\n    _canSelect(date) {\n        return !this.dateFilter || this.dateFilter(date);\n    }\n}\nMatMonthView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMonthView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMonthView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMonthView, selector: \"mat-month-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMonthView\"], usesOnChanges: true, ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMonthView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-month-view', exportAs: 'matMonthView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead class=\\\"mat-calendar-table-header\\\">\\n    <tr>\\n      <!-- For the day-of-the-week column header, we use an `<abbr>` element because VoiceOver\\n           ignores the `aria-label`. ChromeVox, however, does not read the full name\\n           for the `<abbr>`, so we still set `aria-label` on the header element. -->\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">\\n        <abbr class=\\\"mat-calendar-abbr\\\" [attr.title]=\\\"day.long\\\">{{day.narrow}}</abbr>\\n      </th>\\n    </tr>\\n    <tr><th aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_monthLabel\\\"\\n         [rows]=\\\"_weeks\\\"\\n         [todayValue]=\\\"_todayDate!\\\"\\n         [startValue]=\\\"_rangeStart!\\\"\\n         [endValue]=\\\"_rangeEnd!\\\"\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\n         [previewStart]=\\\"_previewStart\\\"\\n         [previewEnd]=\\\"_previewEnd\\\"\\n         [isRange]=\\\"_isRange\\\"\\n         [labelMinRequiredCells]=\\\"3\\\"\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst yearsPerPage = 24;\nconst yearsPerRow = 4;\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\nclass MatMultiYearView {\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new year is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected year. This doesn't imply a change on the selected date */\n        this.yearSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedYear(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Initializes this multi-year view. */\n    _init() {\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n        // We want a range years such that we maximize the number of\n        // enabled dates visible at once. This prevents issues where the minimum year\n        // is the last item of a page OR the maximum year is the first item of a page.\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view.\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n        this._years = [];\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\n            row.push(minYearOfPage + i);\n            if (row.length == yearsPerRow) {\n                this._years.push(row.map(year => this._createCellForYear(year)));\n                row = [];\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Handles when a new year is selected. */\n    _yearSelected(event) {\n        const year = event.value;\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n        let month = this._dateAdapter.getMonth(this.activeDate);\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeydown(event) {\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage -\n                    getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) -\n                    1);\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in multi-year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    _getActiveCell() {\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /** Creates an MatCalendarCell for the given year. */\n    _createCellForYear(year) {\n        const date = this._dateAdapter.createDate(year, 0, 1);\n        const yearName = this._dateAdapter.getYearName(date);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n        return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n    }\n    /** Whether the given year is enabled. */\n    _shouldEnableYear(year) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined ||\n            year === null ||\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-highlighted year based on a model value. */\n    _setSelectedYear(value) {\n        this._selectedYear = null;\n        if (value instanceof DateRange) {\n            const displayValue = value.start || value.end;\n            if (displayValue) {\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\n            }\n        }\n        else if (value) {\n            this._selectedYear = this._dateAdapter.getYear(value);\n        }\n    }\n}\nMatMultiYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMultiYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatMultiYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matMultiYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatMultiYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-multi-year-view', exportAs: 'matMultiYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [rows]=\\\"_years\\\"\\n         [todayValue]=\\\"_todayYear\\\"\\n         [startValue]=\\\"_selectedYear!\\\"\\n         [endValue]=\\\"_selectedYear!\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_getActiveCell()\\\"\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\n    const year1 = dateAdapter.getYear(date1);\n    const year2 = dateAdapter.getYear(date2);\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n    return (Math.floor((year1 - startingYear) / yearsPerPage) ===\n        Math.floor((year2 - startingYear) / yearsPerPage));\n}\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\n    const activeYear = dateAdapter.getYear(activeDate);\n    return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);\n}\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\n    let startingYear = 0;\n    if (maxDate) {\n        const maxYear = dateAdapter.getYear(maxDate);\n        startingYear = maxYear - yearsPerPage + 1;\n    }\n    else if (minDate) {\n        startingYear = dateAdapter.getYear(minDate);\n    }\n    return startingYear;\n}\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo(a, b) {\n    return ((a % b) + b) % b;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\nclass MatYearView {\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dateFormats = _dateFormats;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._rerenderSubscription = Subscription.EMPTY;\n        /** Emits when a new month is selected. */\n        this.selectedChange = new EventEmitter();\n        /** Emits the selected month. This doesn't imply a change on the selected date */\n        this.monthSelected = new EventEmitter();\n        /** Emits when any date is activated. */\n        this.activeDateChange = new EventEmitter();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._activeDate = this._dateAdapter.today();\n    }\n    /** The date to display in this year view (everything other than the year is ignored). */\n    get activeDate() {\n        return this._activeDate;\n    }\n    set activeDate(value) {\n        let oldActiveDate = this._activeDate;\n        const validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) ||\n            this._dateAdapter.today();\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n            this._init();\n        }\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n        this._setSelectedMonth(value);\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    ngAfterContentInit() {\n        this._rerenderSubscription = this._dateAdapter.localeChanges\n            .pipe(startWith(null))\n            .subscribe(() => this._init());\n    }\n    ngOnDestroy() {\n        this._rerenderSubscription.unsubscribe();\n    }\n    /** Handles when a new month is selected. */\n    _monthSelected(event) {\n        const month = event.value;\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        this.monthSelected.emit(normalizedDate);\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeydown(event) {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n        const oldActiveDate = this._activeDate;\n        const isRtl = this._isRtl();\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n                break;\n            case HOME:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                // Note that we only prevent the default action here while the selection happens in\n                // `keyup` below. We can't do the selection here, because it can cause the calendar to\n                // reopen if focus is restored immediately. We also can't call `preventDefault` on `keyup`\n                // because it's too late (see #23305).\n                this._selectionKeyPressed = true;\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n        this._focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n    /** Handles keyup events on the calendar body when calendar is in year view. */\n    _handleCalendarBodyKeyup(event) {\n        if (event.keyCode === SPACE || event.keyCode === ENTER) {\n            if (this._selectionKeyPressed) {\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\n            }\n            this._selectionKeyPressed = false;\n        }\n    }\n    /** Initializes this year view. */\n    _init() {\n        this._setSelectedMonth(this.selected);\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n        let monthNames = this._dateAdapter.getMonthNames('short');\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        this._months = [\n            [0, 1, 2, 3],\n            [4, 5, 6, 7],\n            [8, 9, 10, 11],\n        ].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell() {\n        this._matCalendarBody._focusActiveCell();\n    }\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    _getMonthInCurrentYear(date) {\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate)\n            ? this._dateAdapter.getMonth(date)\n            : null;\n    }\n    /** Creates an MatCalendarCell for the given month. */\n    _createCellForMonth(month, monthName) {\n        const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n        const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n        const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n        return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);\n    }\n    /** Whether the given month is enabled. */\n    _shouldEnableMonth(month) {\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\n        if (month === undefined ||\n            month === null ||\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n        if (!this.dateFilter) {\n            return true;\n        }\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    _isYearAndMonthAfterMaxDate(year, month) {\n        if (this.maxDate) {\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n        return false;\n    }\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    _isYearAndMonthBeforeMinDate(year, month) {\n        if (this.minDate) {\n            const minYear = this._dateAdapter.getYear(this.minDate);\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n        return false;\n    }\n    /** Determines whether the user has the RTL layout direction. */\n    _isRtl() {\n        return this._dir && this._dir.value === 'rtl';\n    }\n    /** Sets the currently-selected month based on a model value. */\n    _setSelectedMonth(value) {\n        if (value instanceof DateRange) {\n            this._selectedMonth =\n                this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);\n        }\n        else {\n            this._selectedMonth = this._getMonthInCurrentYear(value);\n        }\n    }\n}\nMatYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_DATE_FORMATS, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatYearView, selector: \"mat-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: MatCalendarBody, descendants: true }], exportAs: [\"matYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\", components: [{ type: MatCalendarBody, selector: \"[mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"matCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatYearView, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-year-view', exportAs: 'matYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"grid\\\">\\n  <thead aria-hidden=\\\"true\\\" class=\\\"mat-calendar-table-header\\\">\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\n  </thead>\\n  <tbody mat-calendar-body\\n         [label]=\\\"_yearLabel\\\"\\n         [rows]=\\\"_months\\\"\\n         [todayValue]=\\\"_todayMonth!\\\"\\n         [startValue]=\\\"_selectedMonth!\\\"\\n         [endValue]=\\\"_selectedMonth!\\\"\\n         [labelMinRequiredCells]=\\\"2\\\"\\n         [numCols]=\\\"4\\\"\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\n         (keyup)=\\\"_handleCalendarBodyKeyup($event)\\\"\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\n  </tbody>\\n</table>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { activeDate: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], activeDateChange: [{\n                type: Output\n            }], _matCalendarBody: [{\n                type: ViewChild,\n                args: [MatCalendarBody]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Datepicker data that requires internationalization. */\nclass MatDatepickerIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the calendar popup (used by screen readers). */\n        this.calendarLabel = 'Calendar';\n        /** A label for the button used to open the calendar popup (used by screen readers). */\n        this.openCalendarLabel = 'Open calendar';\n        /** Label for the button used to close the calendar popup. */\n        this.closeCalendarLabel = 'Close calendar';\n        /** A label for the previous month button (used by screen readers). */\n        this.prevMonthLabel = 'Previous month';\n        /** A label for the next month button (used by screen readers). */\n        this.nextMonthLabel = 'Next month';\n        /** A label for the previous year button (used by screen readers). */\n        this.prevYearLabel = 'Previous year';\n        /** A label for the next year button (used by screen readers). */\n        this.nextYearLabel = 'Next year';\n        /** A label for the previous multi-year button (used by screen readers). */\n        this.prevMultiYearLabel = 'Previous 24 years';\n        /** A label for the next multi-year button (used by screen readers). */\n        this.nextMultiYearLabel = 'Next 24 years';\n        /** A label for the 'switch to month view' button (used by screen readers). */\n        this.switchToMonthViewLabel = 'Choose date';\n        /** A label for the 'switch to year view' button (used by screen readers). */\n        this.switchToMultiYearViewLabel = 'Choose month and year';\n    }\n    /** Formats a range of years. */\n    formatYearRange(start, end) {\n        return `${start} \\u2013 ${end}`;\n    }\n}\nMatDatepickerIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatDatepickerIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter used to generate unique IDs. */\nlet uniqueId = 0;\n/** Default header for MatCalendar */\nclass MatCalendarHeader {\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\n        this._intl = _intl;\n        this.calendar = calendar;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._buttonDescriptionId = `mat-calendar-button-${uniqueId++}`;\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n    /** The label for the current calendar view. */\n    get periodButtonText() {\n        if (this.calendar.currentView == 'month') {\n            return this._dateAdapter\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                .toLocaleUpperCase();\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\n        }\n        // The offset from the active year to the \"slot\" for the starting year is the\n        // *actual* first rendered year in the multi-year view, and the last year is\n        // just yearsPerPage - 1 away.\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n        const minYearOfPage = activeYear -\n            getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n        return this._intl.formatYearRange(minYearName, maxYearName);\n    }\n    get periodButtonLabel() {\n        return this.calendar.currentView == 'month'\n            ? this._intl.switchToMultiYearViewLabel\n            : this._intl.switchToMonthViewLabel;\n    }\n    /** The label for the previous button. */\n    get prevButtonLabel() {\n        return {\n            'month': this._intl.prevMonthLabel,\n            'year': this._intl.prevYearLabel,\n            'multi-year': this._intl.prevMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** The label for the next button. */\n    get nextButtonLabel() {\n        return {\n            'month': this._intl.nextMonthLabel,\n            'year': this._intl.nextYearLabel,\n            'multi-year': this._intl.nextMultiYearLabel,\n        }[this.calendar.currentView];\n    }\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked() {\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n    }\n    /** Handles user clicks on the previous button. */\n    previousClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\n    }\n    /** Handles user clicks on the next button. */\n    nextClicked() {\n        this.calendar.activeDate =\n            this.calendar.currentView == 'month'\n                ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1)\n                : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\n    }\n    /** Whether the previous period button is enabled. */\n    previousEnabled() {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n        return (!this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate));\n    }\n    /** Whether the next period button is enabled. */\n    nextEnabled() {\n        return (!this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate));\n    }\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    _isSameView(date1, date2) {\n        if (this.calendar.currentView == 'month') {\n            return (this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2));\n        }\n        if (this.calendar.currentView == 'year') {\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n        }\n        // Otherwise we are in 'multi-year' view.\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n    }\n}\nMatCalendarHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarHeader, deps: [{ token: MatDatepickerIntl }, { token: forwardRef(() => MatCalendar) }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendarHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCalendarHeader, selector: \"mat-calendar-header\", exportAs: [\"matCalendarHeader\"], ngImport: i0, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\", components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i4.CdkAriaLive, selector: \"[cdkAriaLive]\", inputs: [\"cdkAriaLive\"], exportAs: [\"cdkAriaLive\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendarHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar-header', exportAs: 'matCalendarHeader', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-calendar-header\\\">\\n  <div class=\\\"mat-calendar-controls\\\">\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\n            [attr.aria-describedby]=\\\"_buttonDescriptionId\\\"\\n            cdkAriaLive=\\\"polite\\\">\\n      <span [attr.id]=\\\"_buttonDescriptionId\\\">{{periodButtonText}}</span>\\n      <svg class=\\\"mat-calendar-arrow\\\" [class.mat-calendar-invert]=\\\"calendar.currentView !== 'month'\\\"\\n           viewBox=\\\"0 0 10 5\\\" focusable=\\\"false\\\">\\n           <polygon points=\\\"0,0 5,5 10,0\\\"/>\\n      </svg>\\n    </button>\\n\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\n\\n    <ng-content></ng-content>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\n    </button>\\n\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\n    </button>\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: MatDatepickerIntl }, { type: MatCalendar, decorators: [{\n                        type: Inject,\n                        args: [forwardRef(() => MatCalendar)]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    } });\n/** A calendar that is used as part of the datepicker. */\nclass MatCalendar {\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\n         * We need to schedule it, rather than do it immediately, because we have to wait\n         * for Angular to re-evaluate the view children.\n         */\n        this._moveFocusOnNextTick = false;\n        /** Whether the calendar should be started in month or year view. */\n        this.startView = 'month';\n        /** Emits when the currently selected date changes. */\n        this.selectedChange = new EventEmitter();\n        /**\n         * Emits the year chosen in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits the month chosen in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when any date is selected. */\n        this._userSelection = new EventEmitter();\n        /**\n         * Emits whenever there is a state change that the header may need to respond to.\n         */\n        this.stateChanges = new Subject();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        this._intlChanges = _intl.changes.subscribe(() => {\n            _changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** A date representing the period (month or year) to start the calendar in. */\n    get startAt() {\n        return this._startAt;\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The currently selected date. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        if (value instanceof DateRange) {\n            this._selected = value;\n        }\n        else {\n            this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        }\n    }\n    /** The minimum selectable date. */\n    get minDate() {\n        return this._minDate;\n    }\n    set minDate(value) {\n        this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** The maximum selectable date. */\n    get maxDate() {\n        return this._maxDate;\n    }\n    set maxDate(value) {\n        this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate() {\n        return this._clampedActiveDate;\n    }\n    set activeDate(value) {\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the calendar is in month view. */\n    get currentView() {\n        return this._currentView;\n    }\n    set currentView(value) {\n        const viewChangedResult = this._currentView !== value ? value : null;\n        this._currentView = value;\n        this._moveFocusOnNextTick = true;\n        this._changeDetectorRef.markForCheck();\n        if (viewChangedResult) {\n            this.viewChanged.emit(viewChangedResult);\n        }\n    }\n    ngAfterContentInit() {\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n        this.activeDate = this.startAt || this._dateAdapter.today();\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n    ngAfterViewChecked() {\n        if (this._moveFocusOnNextTick) {\n            this._moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    ngOnChanges(changes) {\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n        if (change && !change.firstChange) {\n            const view = this._getCurrentViewComponent();\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n                this._changeDetectorRef.detectChanges();\n                view._init();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /** Focuses the active date. */\n    focusActiveCell() {\n        this._getCurrentViewComponent()._focusActiveCell(false);\n    }\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        this._getCurrentViewComponent()._init();\n    }\n    /** Handles date selection in the month view. */\n    _dateSelected(event) {\n        const date = event.value;\n        if (this.selected instanceof DateRange ||\n            (date && !this._dateAdapter.sameDate(date, this.selected))) {\n            this.selectedChange.emit(date);\n        }\n        this._userSelection.emit(event);\n    }\n    /** Handles year selection in the multiyear view. */\n    _yearSelectedInMultiYearView(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Handles month selection in the year view. */\n    _monthSelectedInYearView(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Handles year/month selection in the multi-year/year views. */\n    _goToDateInView(date, view) {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n    /** Returns the component instance that corresponds to the current calendar view. */\n    _getCurrentViewComponent() {\n        // The return type is explicitly written as a union to ensure that the Closure compiler does\n        // not optimize calls to _init(). Without the explict return type, TypeScript narrows it to\n        // only the first component type. See https://github.com/angular/components/issues/22996.\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\nMatCalendar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendar, deps: [{ token: MatDatepickerIntl }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatCalendar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatCalendar, selector: \"mat-calendar\", inputs: { headerComponent: \"headerComponent\", startAt: \"startAt\", startView: \"startView\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", _userSelection: \"_userSelection\" }, host: { classAttribute: \"mat-calendar\" }, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], viewQueries: [{ propertyName: \"monthView\", first: true, predicate: MatMonthView, descendants: true }, { propertyName: \"yearView\", first: true, predicate: MatYearView, descendants: true }, { propertyName: \"multiYearView\", first: true, predicate: MatMultiYearView, descendants: true }], exportAs: [\"matCalendar\"], usesOnChanges: true, ngImport: i0, template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"], components: [{ type: MatMonthView, selector: \"mat-month-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"_userSelection\", \"activeDateChange\"], exportAs: [\"matMonthView\"] }, { type: MatYearView, selector: \"mat-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"monthSelected\", \"activeDateChange\"], exportAs: [\"matYearView\"] }, { type: MatMultiYearView, selector: \"mat-multi-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"yearSelected\", \"activeDateChange\"], exportAs: [\"matMultiYearView\"] }], directives: [{ type: i8.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatCalendar, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-calendar', host: {\n                        'class': 'mat-calendar',\n                    }, exportAs: 'matCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER], template: \"<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\n\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\n  <mat-month-view\\n      *ngSwitchCase=\\\"'month'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      [comparisonStart]=\\\"comparisonStart\\\"\\n      [comparisonEnd]=\\\"comparisonEnd\\\"\\n      (_userSelection)=\\\"_dateSelected($event)\\\">\\n  </mat-month-view>\\n\\n  <mat-year-view\\n      *ngSwitchCase=\\\"'year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\n  </mat-year-view>\\n\\n  <mat-multi-year-view\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\n      [(activeDate)]=\\\"activeDate\\\"\\n      [selected]=\\\"selected\\\"\\n      [dateFilter]=\\\"dateFilter\\\"\\n      [maxDate]=\\\"maxDate\\\"\\n      [minDate]=\\\"minDate\\\"\\n      [dateClass]=\\\"dateClass\\\"\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\n  </mat-multi-year-view>\\n</div>\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.7142857143% - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:10px;height:5px;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.cdk-high-contrast-active .mat-calendar-arrow{fill:CanvasText}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}.mat-calendar-abbr{text-decoration:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatDatepickerIntl }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i0.ChangeDetectorRef }];\n    }, propDecorators: { headerComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], minDate: [{\n                type: Input\n            }], maxDate: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], dateClass: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], selectedChange: [{\n                type: Output\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], _userSelection: [{\n                type: Output\n            }], monthView: [{\n                type: ViewChild,\n                args: [MatMonthView]\n            }], yearView: [{\n                type: ViewChild,\n                args: [MatYearView]\n            }], multiYearView: [{\n                type: ViewChild,\n                args: [MatMultiYearView]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nconst matDatepickerAnimations = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        transition('void => enter-dropdown', animate('120ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(1, 0.8)' }),\n            style({ opacity: 1, transform: 'scale(1, 1)' }),\n        ]))),\n        transition('void => enter-dialog', animate('150ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0.7)' }),\n            style({ transform: 'none', opacity: 1 }),\n        ]))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 }))),\n    ]),\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n        // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')),\n    ]),\n};\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n/** Injection token that determines the scroll handling while the calendar is open. */\nconst MAT_DATEPICKER_SCROLL_STRATEGY = new InjectionToken('mat-datepicker-scroll-strategy');\n/** @docs-private */\nfunction MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nconst _MatDatepickerContentBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n});\n/**\n * Component used as the content for the datepicker overlay. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the overlay that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\nclass MatDatepickerContent extends _MatDatepickerContentBase {\n    constructor(elementRef, _changeDetectorRef, _globalModel, _dateAdapter, _rangeSelectionStrategy, intl) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._globalModel = _globalModel;\n        this._dateAdapter = _dateAdapter;\n        this._rangeSelectionStrategy = _rangeSelectionStrategy;\n        this._subscriptions = new Subscription();\n        /** Emits when an animation has finished. */\n        this._animationDone = new Subject();\n        /** Portal with projected action buttons. */\n        this._actionsPortal = null;\n        this._closeButtonText = intl.closeCalendarLabel;\n    }\n    ngOnInit() {\n        // If we have actions, clone the model so that we have the ability to cancel the selection,\n        // otherwise update the global model directly. Note that we want to assign this as soon as\n        // possible, but `_actionsPortal` isn't available in the constructor so we do it in `ngOnInit`.\n        this._model = this._actionsPortal ? this._globalModel.clone() : this._globalModel;\n        this._animationState = this.datepicker.touchUi ? 'enter-dialog' : 'enter-dropdown';\n    }\n    ngAfterViewInit() {\n        this._subscriptions.add(this.datepicker.stateChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        }));\n        this._calendar.focusActiveCell();\n    }\n    ngOnDestroy() {\n        this._subscriptions.unsubscribe();\n        this._animationDone.complete();\n    }\n    _handleUserSelection(event) {\n        const selection = this._model.selection;\n        const value = event.value;\n        const isRange = selection instanceof DateRange;\n        // If we're selecting a range and we have a selection strategy, always pass the value through\n        // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n        // A null value when picking a range means that the user cancelled the selection (e.g. by\n        // pressing escape), whereas when selecting a single value it means that the value didn't\n        // change. This isn't very intuitive, but it's here for backwards-compatibility.\n        if (isRange && this._rangeSelectionStrategy) {\n            const newSelection = this._rangeSelectionStrategy.selectionFinished(value, selection, event.event);\n            this._model.updateSelection(newSelection, this);\n        }\n        else if (value &&\n            (isRange || !this._dateAdapter.sameDate(value, selection))) {\n            this._model.add(value);\n        }\n        // Delegate closing the overlay to the actions.\n        if ((!this._model || this._model.isComplete()) && !this._actionsPortal) {\n            this.datepicker.close();\n        }\n    }\n    _startExitAnimation() {\n        this._animationState = 'void';\n        this._changeDetectorRef.markForCheck();\n    }\n    _getSelected() {\n        return this._model.selection;\n    }\n    /** Applies the current pending selection to the global model. */\n    _applyPendingSelection() {\n        if (this._model !== this._globalModel) {\n            this._globalModel.updateSelection(this._model.selection, this);\n        }\n    }\n}\nMatDatepickerContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerContent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MatDateSelectionModel }, { token: i1$1.DateAdapter }, { token: MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }, { token: MatDatepickerIntl }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerContent, selector: \"mat-datepicker-content\", inputs: { color: \"color\" }, host: { listeners: { \"@transformPanel.done\": \"_animationDone.next()\" }, properties: { \"@transformPanel\": \"_animationState\", \"class.mat-datepicker-content-touch\": \"datepicker.touchUi\" }, classAttribute: \"mat-datepicker-content\" }, viewQueries: [{ propertyName: \"_calendar\", first: true, predicate: MatCalendar, descendants: true }], exportAs: [\"matDatepickerContent\"], usesInheritance: true, ngImport: i0, template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"], components: [{ type: MatCalendar, selector: \"mat-calendar\", inputs: [\"headerComponent\", \"startAt\", \"startView\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"yearSelected\", \"monthSelected\", \"viewChanged\", \"_userSelection\"], exportAs: [\"matCalendar\"] }, { type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i4.CdkTrapFocus, selector: \"[cdkTrapFocus]\", inputs: [\"cdkTrapFocus\", \"cdkTrapFocusAutoCapture\"], exportAs: [\"cdkTrapFocus\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i8.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerContent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-content', host: {\n                        'class': 'mat-datepicker-content',\n                        '[@transformPanel]': '_animationState',\n                        '(@transformPanel.done)': '_animationDone.next()',\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n                    }, animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar], exportAs: 'matDatepickerContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], template: \"<div\\n  cdkTrapFocus\\n  class=\\\"mat-datepicker-content-container\\\"\\n  [class.mat-datepicker-content-container-with-actions]=\\\"_actionsPortal\\\">\\n  <mat-calendar\\n    [id]=\\\"datepicker.id\\\"\\n    [ngClass]=\\\"datepicker.panelClass\\\"\\n    [startAt]=\\\"datepicker.startAt\\\"\\n    [startView]=\\\"datepicker.startView\\\"\\n    [minDate]=\\\"datepicker._getMinDate()\\\"\\n    [maxDate]=\\\"datepicker._getMaxDate()\\\"\\n    [dateFilter]=\\\"datepicker._getDateFilter()\\\"\\n    [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\n    [selected]=\\\"_getSelected()\\\"\\n    [dateClass]=\\\"datepicker.dateClass\\\"\\n    [comparisonStart]=\\\"comparisonStart\\\"\\n    [comparisonEnd]=\\\"comparisonEnd\\\"\\n    [@fadeInCalendar]=\\\"'enter'\\\"\\n    (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\"\\n    (viewChanged)=\\\"datepicker._viewChanged($event)\\\"\\n    (_userSelection)=\\\"_handleUserSelection($event)\\\"></mat-calendar>\\n\\n  <ng-template [cdkPortalOutlet]=\\\"_actionsPortal\\\"></ng-template>\\n\\n  <!-- Invisible close button for screen reader users. -->\\n  <button\\n    type=\\\"button\\\"\\n    mat-raised-button\\n    [color]=\\\"color || 'primary'\\\"\\n    class=\\\"mat-datepicker-close-button\\\"\\n    [class.cdk-visually-hidden]=\\\"!_closeButtonFocused\\\"\\n    (focus)=\\\"_closeButtonFocused = true\\\"\\n    (blur)=\\\"_closeButtonFocused = false\\\"\\n    (click)=\\\"datepicker.close()\\\">{{ _closeButtonText }}</button>\\n</div>\\n\", styles: [\".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content .mat-datepicker-close-button{position:absolute;top:100%;left:0;margin-top:8px}.ng-animating .mat-datepicker-content .mat-datepicker-close-button{display:none}.mat-datepicker-content-container{display:flex;flex-direction:column;justify-content:space-between}.mat-datepicker-content-touch{display:block;max-height:80vh;position:relative;overflow:visible}.mat-datepicker-content-touch .mat-datepicker-content-container{min-height:312px;max-height:788px;min-width:250px;max-width:750px}.mat-datepicker-content-touch .mat-calendar{width:100%;height:auto}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-datepicker-content-container{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-datepicker-content-container{width:80vw;height:100vw}.mat-datepicker-content-touch .mat-datepicker-content-container-with-actions{height:115vw}}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: MatDateSelectionModel }, { type: i1$1.DateAdapter }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]\n                    }] }, { type: MatDatepickerIntl }];\n    }, propDecorators: { _calendar: [{\n                type: ViewChild,\n                args: [MatCalendar]\n            }] } });\n/** Base class for a datepicker. */\nclass MatDatepickerBase {\n    constructor(_overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _model) {\n        this._overlay = _overlay;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dateAdapter = _dateAdapter;\n        this._dir = _dir;\n        this._model = _model;\n        this._inputStateChanges = Subscription.EMPTY;\n        /** The view that the calendar should start in. */\n        this.startView = 'month';\n        this._touchUi = false;\n        /** Preferred position of the datepicker in the X axis. */\n        this.xPosition = 'start';\n        /** Preferred position of the datepicker in the Y axis. */\n        this.yPosition = 'below';\n        this._restoreFocus = true;\n        /**\n         * Emits selected year in multiyear view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.yearSelected = new EventEmitter();\n        /**\n         * Emits selected month in year view.\n         * This doesn't imply a change on the selected date.\n         */\n        this.monthSelected = new EventEmitter();\n        /**\n         * Emits when the current view changes.\n         */\n        this.viewChanged = new EventEmitter(true);\n        /** Emits when the datepicker has been opened. */\n        this.openedStream = new EventEmitter();\n        /** Emits when the datepicker has been closed. */\n        this.closedStream = new EventEmitter();\n        this._opened = false;\n        /** The id for the datepicker calendar. */\n        this.id = `mat-datepicker-${datepickerUid++}`;\n        /** The element that was focused before the datepicker was opened. */\n        this._focusedElementBeforeOpen = null;\n        /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n        this._backdropHarnessClass = `${this.id}-backdrop`;\n        /** Emits when the datepicker's state changes. */\n        this.stateChanges = new Subject();\n        if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /** The date to open the calendar to initially. */\n    get startAt() {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.getStartValue() : null);\n    }\n    set startAt(value) {\n        this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n    /** Color palette to use on the datepicker's calendar. */\n    get color() {\n        return (this._color || (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined));\n    }\n    set color(value) {\n        this._color = value;\n    }\n    /**\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n     * than a dropdown and elements have more padding to allow for bigger touch targets.\n     */\n    get touchUi() {\n        return this._touchUi;\n    }\n    set touchUi(value) {\n        this._touchUi = coerceBooleanProperty(value);\n    }\n    /** Whether the datepicker pop-up should be disabled. */\n    get disabled() {\n        return this._disabled === undefined && this.datepickerInput\n            ? this.datepickerInput.disabled\n            : !!this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /**\n     * Whether to restore focus to the previously-focused element when the calendar is closed.\n     * Note that automatic focus restoration is an accessibility feature and it is recommended that\n     * you provide your own equivalent, if you decide to turn it off.\n     */\n    get restoreFocus() {\n        return this._restoreFocus;\n    }\n    set restoreFocus(value) {\n        this._restoreFocus = coerceBooleanProperty(value);\n    }\n    /**\n     * Classes to be passed to the date picker panel.\n     * Supports string and string array values, similar to `ngClass`.\n     */\n    get panelClass() {\n        return this._panelClass;\n    }\n    set panelClass(value) {\n        this._panelClass = coerceStringArray(value);\n    }\n    /** Whether the calendar is open. */\n    get opened() {\n        return this._opened;\n    }\n    set opened(value) {\n        coerceBooleanProperty(value) ? this.open() : this.close();\n    }\n    /** The minimum selectable date. */\n    _getMinDate() {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n    /** The maximum selectable date. */\n    _getMaxDate() {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n    _getDateFilter() {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n    ngOnChanges(changes) {\n        const positionChange = changes['xPosition'] || changes['yPosition'];\n        if (positionChange && !positionChange.firstChange && this._overlayRef) {\n            const positionStrategy = this._overlayRef.getConfig().positionStrategy;\n            if (positionStrategy instanceof FlexibleConnectedPositionStrategy) {\n                this._setConnectedPositions(positionStrategy);\n                if (this.opened) {\n                    this._overlayRef.updatePosition();\n                }\n            }\n        }\n        this.stateChanges.next(undefined);\n    }\n    ngOnDestroy() {\n        this._destroyOverlay();\n        this.close();\n        this._inputStateChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Selects the given date */\n    select(date) {\n        this._model.add(date);\n    }\n    /** Emits the selected year in multiyear view */\n    _selectYear(normalizedYear) {\n        this.yearSelected.emit(normalizedYear);\n    }\n    /** Emits selected month in year view */\n    _selectMonth(normalizedMonth) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n    /** Emits changed view */\n    _viewChanged(view) {\n        this.viewChanged.emit(view);\n    }\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     * @returns Selection model that the input should hook itself up to.\n     */\n    registerInput(input) {\n        if (this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single input.');\n        }\n        this._inputStateChanges.unsubscribe();\n        this.datepickerInput = input;\n        this._inputStateChanges = input.stateChanges.subscribe(() => this.stateChanges.next(undefined));\n        return this._model;\n    }\n    /**\n     * Registers a portal containing action buttons with the datepicker.\n     * @param portal Portal to be registered.\n     */\n    registerActions(portal) {\n        if (this._actionsPortal && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('A MatDatepicker can only be associated with a single actions row.');\n        }\n        this._actionsPortal = portal;\n    }\n    /**\n     * Removes a portal containing action buttons from the datepicker.\n     * @param portal Portal to be removed.\n     */\n    removeActions(portal) {\n        if (portal === this._actionsPortal) {\n            this._actionsPortal = null;\n        }\n    }\n    /** Open the calendar. */\n    open() {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempted to open an MatDatepicker with no associated input.');\n        }\n        this._focusedElementBeforeOpen = _getFocusedElementPierceShadowDom();\n        this._openOverlay();\n        this._opened = true;\n        this.openedStream.emit();\n    }\n    /** Close the calendar. */\n    close() {\n        if (!this._opened) {\n            return;\n        }\n        if (this._componentRef) {\n            const instance = this._componentRef.instance;\n            instance._startExitAnimation();\n            instance._animationDone.pipe(take(1)).subscribe(() => this._destroyOverlay());\n        }\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this._focusedElementBeforeOpen = null;\n            }\n        };\n        if (this._restoreFocus &&\n            this._focusedElementBeforeOpen &&\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this._focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        }\n        else {\n            completeClose();\n        }\n    }\n    /** Applies the current pending selection on the overlay to the model. */\n    _applyPendingSelection() {\n        var _a, _b;\n        (_b = (_a = this._componentRef) === null || _a === void 0 ? void 0 : _a.instance) === null || _b === void 0 ? void 0 : _b._applyPendingSelection();\n    }\n    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n    _forwardContentValues(instance) {\n        instance.datepicker = this;\n        instance.color = this.color;\n        instance._actionsPortal = this._actionsPortal;\n    }\n    /** Opens the overlay with the calendar. */\n    _openOverlay() {\n        this._destroyOverlay();\n        const isDialog = this.touchUi;\n        const labelId = this.datepickerInput.getOverlayLabelId();\n        const portal = new ComponentPortal(MatDatepickerContent, this._viewContainerRef);\n        const overlayRef = (this._overlayRef = this._overlay.create(new OverlayConfig({\n            positionStrategy: isDialog ? this._getDialogStrategy() : this._getDropdownStrategy(),\n            hasBackdrop: true,\n            backdropClass: [\n                isDialog ? 'cdk-overlay-dark-backdrop' : 'mat-overlay-transparent-backdrop',\n                this._backdropHarnessClass,\n            ],\n            direction: this._dir,\n            scrollStrategy: isDialog ? this._overlay.scrollStrategies.block() : this._scrollStrategy(),\n            panelClass: `mat-datepicker-${isDialog ? 'dialog' : 'popup'}`,\n        })));\n        const overlayElement = overlayRef.overlayElement;\n        overlayElement.setAttribute('role', 'dialog');\n        if (labelId) {\n            overlayElement.setAttribute('aria-labelledby', labelId);\n        }\n        if (isDialog) {\n            overlayElement.setAttribute('aria-modal', 'true');\n        }\n        this._getCloseStream(overlayRef).subscribe(event => {\n            if (event) {\n                event.preventDefault();\n            }\n            this.close();\n        });\n        this._componentRef = overlayRef.attach(portal);\n        this._forwardContentValues(this._componentRef.instance);\n        // Update the position once the calendar has rendered. Only relevant in dropdown mode.\n        if (!isDialog) {\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => overlayRef.updatePosition());\n        }\n    }\n    /** Destroys the current overlay. */\n    _destroyOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = this._componentRef = null;\n        }\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDialogStrategy() {\n        return this._overlay.position().global().centerHorizontally().centerVertically();\n    }\n    /** Gets a position strategy that will open the calendar as a dropdown. */\n    _getDropdownStrategy() {\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\n            .withTransformOriginOn('.mat-datepicker-content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition();\n        return this._setConnectedPositions(strategy);\n    }\n    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n    _setConnectedPositions(strategy) {\n        const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n        const secondaryX = primaryX === 'start' ? 'end' : 'start';\n        const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n        const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n        return strategy.withPositions([\n            {\n                originX: primaryX,\n                originY: secondaryY,\n                overlayX: primaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: primaryX,\n                originY: primaryY,\n                overlayX: primaryX,\n                overlayY: secondaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: secondaryY,\n                overlayX: secondaryX,\n                overlayY: primaryY,\n            },\n            {\n                originX: secondaryX,\n                originY: primaryY,\n                overlayX: secondaryX,\n                overlayY: secondaryY,\n            },\n        ]);\n    }\n    /** Gets an observable that will emit when the overlay is supposed to be closed. */\n    _getCloseStream(overlayRef) {\n        return merge(overlayRef.backdropClick(), overlayRef.detachments(), overlayRef.keydownEvents().pipe(filter(event => {\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\n            return ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                (this.datepickerInput && hasModifierKey(event, 'altKey') && event.keyCode === UP_ARROW));\n        })));\n    }\n}\nMatDatepickerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerBase, deps: [{ token: i9.Overlay }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: MAT_DATEPICKER_SCROLL_STRATEGY }, { token: i1$1.DateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: MatDateSelectionModel }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerBase, inputs: { calendarHeaderComponent: \"calendarHeaderComponent\", startAt: \"startAt\", startView: \"startView\", color: \"color\", touchUi: \"touchUi\", disabled: \"disabled\", xPosition: \"xPosition\", yPosition: \"yPosition\", restoreFocus: \"restoreFocus\", dateClass: \"dateClass\", panelClass: \"panelClass\", opened: \"opened\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", viewChanged: \"viewChanged\", openedStream: \"opened\", closedStream: \"closed\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i9.Overlay }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: MatDateSelectionModel }];\n    }, propDecorators: { calendarHeaderComponent: [{\n                type: Input\n            }], startAt: [{\n                type: Input\n            }], startView: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], touchUi: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], xPosition: [{\n                type: Input\n            }], yPosition: [{\n                type: Input\n            }], restoreFocus: [{\n                type: Input\n            }], yearSelected: [{\n                type: Output\n            }], monthSelected: [{\n                type: Output\n            }], viewChanged: [{\n                type: Output\n            }], dateClass: [{\n                type: Input\n            }], openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], panelClass: [{\n                type: Input\n            }], opened: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\nclass MatDatepicker extends MatDatepickerBase {\n}\nMatDatepicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDatepicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepicker, selector: \"mat-datepicker\", providers: [\n        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n    ], exportAs: [\"matDatepicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-datepicker',\n                    template: '',\n                    exportAs: 'matDatepicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDatepicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nclass MatDatepickerInputEvent {\n    constructor(\n    /** Reference to the datepicker input component that emitted the event. */\n    target, \n    /** Reference to the native input element associated with the datepicker input. */\n    targetElement) {\n        this.target = target;\n        this.targetElement = targetElement;\n        this.value = this.target.value;\n    }\n}\n/** Base class for datepicker inputs. */\nclass MatDatepickerInputBase {\n    constructor(_elementRef, _dateAdapter, _dateFormats) {\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._dateFormats = _dateFormats;\n        /** Emits when a `change` event is fired on this `<input>`. */\n        this.dateChange = new EventEmitter();\n        /** Emits when an `input` event is fired on this `<input>`. */\n        this.dateInput = new EventEmitter();\n        /** Emits when the internal state has changed */\n        this.stateChanges = new Subject();\n        this._onTouched = () => { };\n        this._validatorOnChange = () => { };\n        this._cvaOnChange = () => { };\n        this._valueChangesSubscription = Subscription.EMPTY;\n        this._localeSubscription = Subscription.EMPTY;\n        /** The form control validator for whether the input parses. */\n        this._parseValidator = () => {\n            return this._lastValueValid\n                ? null\n                : { 'matDatepickerParse': { 'text': this._elementRef.nativeElement.value } };\n        };\n        /** The form control validator for the date filter. */\n        this._filterValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            return !controlValue || this._matchesFilter(controlValue)\n                ? null\n                : { 'matDatepickerFilter': true };\n        };\n        /** The form control validator for the min date. */\n        this._minValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const min = this._getMinDate();\n            return !min || !controlValue || this._dateAdapter.compareDate(min, controlValue) <= 0\n                ? null\n                : { 'matDatepickerMin': { 'min': min, 'actual': controlValue } };\n        };\n        /** The form control validator for the max date. */\n        this._maxValidator = (control) => {\n            const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const max = this._getMaxDate();\n            return !max || !controlValue || this._dateAdapter.compareDate(max, controlValue) >= 0\n                ? null\n                : { 'matDatepickerMax': { 'max': max, 'actual': controlValue } };\n        };\n        /** Whether the last value set on the input was valid. */\n        this._lastValueValid = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._dateAdapter) {\n                throw createMissingDateImplError('DateAdapter');\n            }\n            if (!this._dateFormats) {\n                throw createMissingDateImplError('MAT_DATE_FORMATS');\n            }\n        }\n        // Update the displayed date when the locale changes.\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n            this._assignValueProgrammatically(this.value);\n        });\n    }\n    /** The value of the input. */\n    get value() {\n        return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n    }\n    set value(value) {\n        this._assignValueProgrammatically(value);\n    }\n    /** Whether the datepicker-input is disabled. */\n    get disabled() {\n        return !!this._disabled || this._parentDisabled();\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this._elementRef.nativeElement;\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n        // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n        // element has been inserted.\n        if (newValue && this._isInitialized && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n    /** Gets the base validator functions. */\n    _getValidators() {\n        return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n    }\n    /** Registers a date selection model with the input. */\n    _registerModel(model) {\n        this._model = model;\n        this._valueChangesSubscription.unsubscribe();\n        if (this._pendingValue) {\n            this._assignValue(this._pendingValue);\n        }\n        this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n            if (this._shouldHandleChangeEvent(event)) {\n                const value = this._getValueFromModel(event.selection);\n                this._lastValueValid = this._isValidValue(value);\n                this._cvaOnChange(value);\n                this._onTouched();\n                this._formatValue(value);\n                this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n                this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n            }\n        });\n    }\n    ngAfterViewInit() {\n        this._isInitialized = true;\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._valueChangesSubscription.unsubscribe();\n        this._localeSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** @docs-private */\n    registerOnValidatorChange(fn) {\n        this._validatorOnChange = fn;\n    }\n    /** @docs-private */\n    validate(c) {\n        return this._validator ? this._validator(c) : null;\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this._assignValueProgrammatically(value);\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._cvaOnChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _onKeydown(event) {\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n        if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n            this._openPopup();\n            event.preventDefault();\n        }\n    }\n    _onInput(value) {\n        const lastValueWasValid = this._lastValueValid;\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n        this._lastValueValid = this._isValidValue(date);\n        date = this._dateAdapter.getValidDateOrNull(date);\n        if (!this._dateAdapter.sameDate(date, this.value)) {\n            this._assignValue(date);\n            this._cvaOnChange(date);\n            this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n        else {\n            // Call the CVA change handler for invalid values\n            // since this is what marks the control as dirty.\n            if (value && !this.value) {\n                this._cvaOnChange(date);\n            }\n            if (lastValueWasValid !== this._lastValueValid) {\n                this._validatorOnChange();\n            }\n        }\n    }\n    _onChange() {\n        this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    }\n    /** Handles blur events on the input. */\n    _onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this._formatValue(this.value);\n        }\n        this._onTouched();\n    }\n    /** Formats a value and sets it on the input element. */\n    _formatValue(value) {\n        this._elementRef.nativeElement.value = value\n            ? this._dateAdapter.format(value, this._dateFormats.display.dateInput)\n            : '';\n    }\n    /** Assigns a value to the model. */\n    _assignValue(value) {\n        // We may get some incoming values before the model was\n        // assigned. Save the value so that we can assign it later.\n        if (this._model) {\n            this._assignValueToModel(value);\n            this._pendingValue = null;\n        }\n        else {\n            this._pendingValue = value;\n        }\n    }\n    /** Whether a value is considered valid. */\n    _isValidValue(value) {\n        return !value || this._dateAdapter.isValid(value);\n    }\n    /**\n     * Checks whether a parent control is disabled. This is in place so that it can be overridden\n     * by inputs extending this one which can be placed inside of a group that can be disabled.\n     */\n    _parentDisabled() {\n        return false;\n    }\n    /** Programmatically assigns a value to the input. */\n    _assignValueProgrammatically(value) {\n        value = this._dateAdapter.deserialize(value);\n        this._lastValueValid = this._isValidValue(value);\n        value = this._dateAdapter.getValidDateOrNull(value);\n        this._assignValue(value);\n        this._formatValue(value);\n    }\n    /** Gets whether a value matches the current date filter. */\n    _matchesFilter(value) {\n        const filter = this._getDateFilter();\n        return !filter || filter(value);\n    }\n}\nMatDatepickerInputBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInputBase, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInputBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerInputBase, inputs: { value: \"value\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInputBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    }, propDecorators: { value: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], dateChange: [{\n                type: Output\n            }], dateInput: [{\n                type: Output\n            }] } });\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nfunction dateInputsHaveChanged(changes, adapter) {\n    const keys = Object.keys(changes);\n    for (let key of keys) {\n        const { previousValue, currentValue } = changes[key];\n        if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n            if (!adapter.sameDate(previousValue, currentValue)) {\n                return true;\n            }\n        }\n        else {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** @docs-private */\nconst MAT_DATEPICKER_VALIDATORS = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatDatepickerInput),\n    multi: true,\n};\n/** Directive used to connect an input to a MatDatepicker. */\nclass MatDatepickerInput extends MatDatepickerInputBase {\n    constructor(elementRef, dateAdapter, dateFormats, _formField) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        this._validator = Validators.compose(super._getValidators());\n    }\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker) {\n        if (datepicker) {\n            this._datepicker = datepicker;\n            this._closedSubscription = datepicker.closedStream.subscribe(() => this._onTouched());\n            this._registerModel(datepicker.registerInput(this));\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._validatorOnChange();\n        }\n    }\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const wasMatchingValue = this._matchesFilter(this.value);\n        this._dateFilter = value;\n        if (this._matchesFilter(this.value) !== wasMatchingValue) {\n            this._validatorOnChange();\n        }\n    }\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        if (this._formField) {\n            return this._formField.getLabelId();\n        }\n        return this._elementRef.nativeElement.getAttribute('aria-labelledby');\n    }\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the value at which the calendar should start. */\n    getStartValue() {\n        return this.value;\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._closedSubscription.unsubscribe();\n    }\n    /** Opens the associated datepicker. */\n    _openPopup() {\n        if (this._datepicker) {\n            this._datepicker.open();\n        }\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue;\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            this._model.updateSelection(value, this);\n        }\n    }\n    /** Gets the input's minimum date. */\n    _getMinDate() {\n        return this._min;\n    }\n    /** Gets the input's maximum date. */\n    _getMaxDate() {\n        return this._max;\n    }\n    /** Gets the input's date filtering function. */\n    _getDateFilter() {\n        return this._dateFilter;\n    }\n    _shouldHandleChangeEvent(event) {\n        return event.source !== this;\n    }\n}\nMatDatepickerInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInput, deps: [{ token: i0.ElementRef }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerInput, selector: \"input[matDatepicker]\", inputs: { matDatepicker: \"matDatepicker\", min: \"min\", max: \"max\", dateFilter: [\"matDatepickerFilter\", \"dateFilter\"] }, host: { listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"_datepicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_datepicker?.opened && _datepicker.id) || null\", \"attr.min\": \"min ? _dateAdapter.toIso8601(min) : null\", \"attr.max\": \"max ? _dateAdapter.toIso8601(max) : null\", \"attr.data-mat-calendar\": \"_datepicker ? _datepicker.id : null\", \"disabled\": \"disabled\" }, classAttribute: \"mat-datepicker-input\" }, providers: [\n        MAT_DATEPICKER_VALUE_ACCESSOR,\n        MAT_DATEPICKER_VALIDATORS,\n        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n    ], exportAs: [\"matDatepickerInput\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matDatepicker]',\n                    providers: [\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\n                        MAT_DATEPICKER_VALIDATORS,\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput },\n                    ],\n                    host: {\n                        'class': 'mat-datepicker-input',\n                        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                    },\n                    exportAs: 'matDatepickerInput',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }, { type: i2$1.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { matDatepicker: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input,\n                args: ['matDatepickerFilter']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nclass MatDatepickerToggleIcon {\n}\nMatDatepickerToggleIcon.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggleIcon, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerToggleIcon.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerToggleIcon, selector: \"[matDatepickerToggleIcon]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggleIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerToggleIcon]',\n                }]\n        }] });\nclass MatDatepickerToggle {\n    constructor(_intl, _changeDetectorRef, defaultTabIndex) {\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._stateChanges = Subscription.EMPTY;\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n    }\n    /** Whether the toggle button is disabled. */\n    get disabled() {\n        if (this._disabled === undefined && this.datepicker) {\n            return this.datepicker.disabled;\n        }\n        return !!this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnChanges(changes) {\n        if (changes['datepicker']) {\n            this._watchStateChanges();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.unsubscribe();\n    }\n    ngAfterContentInit() {\n        this._watchStateChanges();\n    }\n    _open(event) {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n    _watchStateChanges() {\n        const datepickerStateChanged = this.datepicker ? this.datepicker.stateChanges : of();\n        const inputStateChanged = this.datepicker && this.datepicker.datepickerInput\n            ? this.datepicker.datepickerInput.stateChanges\n            : of();\n        const datepickerToggled = this.datepicker\n            ? merge(this.datepicker.openedStream, this.datepicker.closedStream)\n            : of();\n        this._stateChanges.unsubscribe();\n        this._stateChanges = merge(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n}\nMatDatepickerToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggle, deps: [{ token: MatDatepickerIntl }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerToggle, selector: \"mat-datepicker-toggle\", inputs: { datepicker: [\"for\", \"datepicker\"], tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], disabled: \"disabled\", disableRipple: \"disableRipple\" }, host: { listeners: { \"click\": \"_open($event)\" }, properties: { \"attr.tabindex\": \"null\", \"class.mat-datepicker-toggle-active\": \"datepicker && datepicker.opened\", \"class.mat-accent\": \"datepicker && datepicker.color === \\\"accent\\\"\", \"class.mat-warn\": \"datepicker && datepicker.color === \\\"warn\\\"\", \"attr.data-mat-calendar\": \"datepicker ? datepicker.id : null\" }, classAttribute: \"mat-datepicker-toggle\" }, queries: [{ propertyName: \"_customIcon\", first: true, predicate: MatDatepickerToggleIcon, descendants: true }], viewQueries: [{ propertyName: \"_button\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matDatepickerToggle\"], usesOnChanges: true, ngImport: i0, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"], components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-toggle', host: {\n                        'class': 'mat-datepicker-toggle',\n                        '[attr.tabindex]': 'null',\n                        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n                        '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n                        '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n                        // Used by the test harness to tie this toggle to its datepicker.\n                        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n                        // Bind the `click` on the host, rather than the inner `button`, so that we can call\n                        // `stopPropagation` on it without affecting the user's `click` handlers. We need to stop\n                        // it so that the input doesn't get focused automatically by the form field (See #21836).\n                        '(click)': '_open($event)',\n                    }, exportAs: 'matDatepickerToggle', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<button\\n  #button\\n  mat-icon-button\\n  type=\\\"button\\\"\\n  [attr.aria-haspopup]=\\\"datepicker ? 'dialog' : null\\\"\\n  [attr.aria-label]=\\\"ariaLabel || _intl.openCalendarLabel\\\"\\n  [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n  [disabled]=\\\"disabled\\\"\\n  [disableRipple]=\\\"disableRipple\\\">\\n\\n  <svg\\n    *ngIf=\\\"!_customIcon\\\"\\n    class=\\\"mat-datepicker-toggle-default-icon\\\"\\n    viewBox=\\\"0 0 24 24\\\"\\n    width=\\\"24px\\\"\\n    height=\\\"24px\\\"\\n    fill=\\\"currentColor\\\"\\n    focusable=\\\"false\\\">\\n    <path d=\\\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\\\"/>\\n  </svg>\\n\\n  <ng-content select=\\\"[matDatepickerToggleIcon]\\\"></ng-content>\\n</button>\\n\", styles: [\".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}.cdk-high-contrast-active .mat-datepicker-toggle-default-icon{color:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatDatepickerIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    }, propDecorators: { datepicker: [{\n                type: Input,\n                args: ['for']\n            }], tabIndex: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], disabled: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], _customIcon: [{\n                type: ContentChild,\n                args: [MatDatepickerToggleIcon]\n            }], _button: [{\n                type: ViewChild,\n                args: ['button']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nconst MAT_DATE_RANGE_INPUT_PARENT = new InjectionToken('MAT_DATE_RANGE_INPUT_PARENT');\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\nclass MatDateRangeInputPartBase extends MatDatepickerInputBase {\n    constructor(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {\n        super(elementRef, dateAdapter, dateFormats);\n        this._rangeInput = _rangeInput;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._injector = _injector;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n    }\n    ngOnInit() {\n        // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n        // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n        // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n        // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n        // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n        // everything has been resolved.\n        // tslint:disable-next-line:no-bitwise\n        const ngControl = this._injector.get(NgControl, null, InjectFlags.Self | InjectFlags.Optional);\n        if (ngControl) {\n            this.ngControl = ngControl;\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    /** Gets whether the input is empty. */\n    isEmpty() {\n        return this._elementRef.nativeElement.value.length === 0;\n    }\n    /** Gets the placeholder of the input. */\n    _getPlaceholder() {\n        return this._elementRef.nativeElement.placeholder;\n    }\n    /** Focuses the input. */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    /** Handles `input` events on the input element. */\n    _onInput(value) {\n        super._onInput(value);\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Opens the datepicker associated with the input. */\n    _openPopup() {\n        this._rangeInput._openDatepicker();\n    }\n    /** Gets the minimum date from the range input. */\n    _getMinDate() {\n        return this._rangeInput.min;\n    }\n    /** Gets the maximum date from the range input. */\n    _getMaxDate() {\n        return this._rangeInput.max;\n    }\n    /** Gets the date filter function from the range input. */\n    _getDateFilter() {\n        return this._rangeInput.dateFilter;\n    }\n    _parentDisabled() {\n        return this._rangeInput._groupDisabled;\n    }\n    _shouldHandleChangeEvent({ source }) {\n        return source !== this._rangeInput._startInput && source !== this._rangeInput._endInput;\n    }\n    _assignValueProgrammatically(value) {\n        super._assignValueProgrammatically(value);\n        const opposite = (this === this._rangeInput._startInput\n            ? this._rangeInput._endInput\n            : this._rangeInput._startInput);\n        opposite === null || opposite === void 0 ? void 0 : opposite._validatorOnChange();\n    }\n}\nMatDateRangeInputPartBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInputPartBase, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatDateRangeInputPartBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDateRangeInputPartBase, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInputPartBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_INPUT_PARENT]\n                    }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    } });\nconst _MatDateRangeInputBase = mixinErrorState(MatDateRangeInputPartBase);\n/** Input for entering the start date in a `mat-date-range-input`. */\nclass MatStartDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the start date isn't after the end date. */\n        this._startValidator = (control) => {\n            const start = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const end = this._model ? this._model.selection.end : null;\n            return !start || !end || this._dateAdapter.compareDate(start, end) <= 0\n                ? null\n                : { 'matStartDateInvalid': { 'end': end, 'actual': start } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._startValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.start;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.start)\n                ? !!change.selection.start\n                : !change.selection.start ||\n                    !!this._dateAdapter.compareDate(change.oldValue.start, change.selection.start);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(value, this._model.selection.end);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _formatValue(value) {\n        super._formatValue(value);\n        // Any time the input value is reformatted we need to tell the parent.\n        this._rangeInput._handleChildValueChange();\n    }\n    /** Gets the value that should be used when mirroring the input's size. */\n    getMirrorValue() {\n        const element = this._elementRef.nativeElement;\n        const value = element.value;\n        return value.length > 0 ? value : element.placeholder;\n    }\n}\nMatStartDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatStartDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatStartDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatStartDate, selector: \"input[matStartDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.id\": \"_rangeInput.id\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-start-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatStartDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matStartDate]',\n                    host: {\n                        'class': 'mat-start-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.id]': '_rangeInput.id',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_INPUT_PARENT]\n                    }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    } });\n/** Input for entering the end date in a `mat-date-range-input`. */\nclass MatEndDate extends _MatDateRangeInputBase {\n    constructor(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {\n        super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);\n        /** Validator that checks that the end date isn't before the start date. */\n        this._endValidator = (control) => {\n            const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n            const start = this._model ? this._model.selection.start : null;\n            return !end || !start || this._dateAdapter.compareDate(end, start) >= 0\n                ? null\n                : { 'matEndDateInvalid': { 'start': start, 'actual': end } };\n        };\n        this._validator = Validators.compose([...super._getValidators(), this._endValidator]);\n    }\n    _getValueFromModel(modelValue) {\n        return modelValue.end;\n    }\n    _shouldHandleChangeEvent(change) {\n        var _a;\n        if (!super._shouldHandleChangeEvent(change)) {\n            return false;\n        }\n        else {\n            return !((_a = change.oldValue) === null || _a === void 0 ? void 0 : _a.end)\n                ? !!change.selection.end\n                : !change.selection.end ||\n                    !!this._dateAdapter.compareDate(change.oldValue.end, change.selection.end);\n        }\n    }\n    _assignValueToModel(value) {\n        if (this._model) {\n            const range = new DateRange(this._model.selection.start, value);\n            this._model.updateSelection(range, this);\n        }\n    }\n    _onKeydown(event) {\n        // If the user is pressing backspace on an empty end input, move focus back to the start.\n        if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n            this._rangeInput._startInput.focus();\n        }\n        super._onKeydown(event);\n    }\n}\nMatEndDate.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatEndDate, deps: [{ token: MAT_DATE_RANGE_INPUT_PARENT }, { token: i0.ElementRef }, { token: i1$1.ErrorStateMatcher }, { token: i0.Injector }, { token: i2$2.NgForm, optional: true }, { token: i2$2.FormGroupDirective, optional: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_DATE_FORMATS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatEndDate.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatEndDate, selector: \"input[matEndDate]\", inputs: { errorStateMatcher: \"errorStateMatcher\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { attributes: { \"type\": \"text\" }, listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"keydown\": \"_onKeydown($event)\", \"blur\": \"_onBlur()\" }, properties: { \"disabled\": \"disabled\", \"attr.aria-haspopup\": \"_rangeInput.rangePicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null\", \"attr.min\": \"_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null\", \"attr.max\": \"_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null\" }, classAttribute: \"mat-end-date mat-date-range-input-inner\" }, providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatEndDate, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matEndDate]',\n                    host: {\n                        'class': 'mat-end-date mat-date-range-input-inner',\n                        '[disabled]': 'disabled',\n                        '(input)': '_onInput($event.target.value)',\n                        '(change)': '_onChange()',\n                        '(keydown)': '_onKeydown($event)',\n                        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n                        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n                        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n                        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n                        '(blur)': '_onBlur()',\n                        'type': 'text',\n                    },\n                    providers: [\n                        { provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true },\n                        { provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true },\n                    ],\n                    // These need to be specified explicitly, because some tooling doesn't\n                    // seem to pick them up from the base class. See #20932.\n                    outputs: ['dateChange', 'dateInput'],\n                    inputs: ['errorStateMatcher'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_DATE_RANGE_INPUT_PARENT]\n                    }] }, { type: i0.ElementRef }, { type: i1$1.ErrorStateMatcher }, { type: i0.Injector }, { type: i2$2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_FORMATS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\nclass MatDateRangeInput {\n    constructor(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dateAdapter = _dateAdapter;\n        this._formField = _formField;\n        this._closedSubscription = Subscription.EMPTY;\n        /** Unique ID for the input. */\n        this.id = `mat-date-range-input-${nextUniqueId++}`;\n        /** Whether the control is focused. */\n        this.focused = false;\n        /** Name of the form control. */\n        this.controlType = 'mat-date-range-input';\n        this._groupDisabled = false;\n        /** Value for the `aria-describedby` attribute of the inputs. */\n        this._ariaDescribedBy = null;\n        /** Separator text to be shown between the inputs. */\n        this.separator = '–';\n        /** Start of the comparison range that should be shown in the calendar. */\n        this.comparisonStart = null;\n        /** End of the comparison range that should be shown in the calendar. */\n        this.comparisonEnd = null;\n        /** Emits when the input's state has changed. */\n        this.stateChanges = new Subject();\n        if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n        // The datepicker module can be used both with MDC and non-MDC form fields. We have\n        // to conditionally add the MDC input class so that the range picker looks correctly.\n        if (_formField === null || _formField === void 0 ? void 0 : _formField._elementRef.nativeElement.classList.contains('mat-mdc-form-field')) {\n            const classList = _elementRef.nativeElement.classList;\n            classList.add('mat-mdc-input-element');\n            classList.add('mat-mdc-form-field-input-control');\n        }\n        // TODO(crisbeto): remove `as any` after #18206 lands.\n        this.ngControl = control;\n    }\n    /** Current value of the range input. */\n    get value() {\n        return this._model ? this._model.selection : null;\n    }\n    /** Whether the control's label should float. */\n    get shouldLabelFloat() {\n        return this.focused || !this.empty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n     * @docs-private\n     */\n    get placeholder() {\n        var _a, _b;\n        const start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';\n        const end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';\n        return start || end ? `${start} ${this.separator} ${end}` : '';\n    }\n    /** The range picker that this input is associated with. */\n    get rangePicker() {\n        return this._rangePicker;\n    }\n    set rangePicker(rangePicker) {\n        if (rangePicker) {\n            this._model = rangePicker.registerInput(this);\n            this._rangePicker = rangePicker;\n            this._closedSubscription.unsubscribe();\n            this._closedSubscription = rangePicker.closedStream.subscribe(() => {\n                var _a, _b;\n                (_a = this._startInput) === null || _a === void 0 ? void 0 : _a._onTouched();\n                (_b = this._endInput) === null || _b === void 0 ? void 0 : _b._onTouched();\n            });\n            this._registerModel(this._model);\n        }\n    }\n    /** Whether the input is required. */\n    get required() {\n        return !!this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Function that can be used to filter out dates within the date range picker. */\n    get dateFilter() {\n        return this._dateFilter;\n    }\n    set dateFilter(value) {\n        const start = this._startInput;\n        const end = this._endInput;\n        const wasMatchingStart = start && start._matchesFilter(start.value);\n        const wasMatchingEnd = end && end._matchesFilter(start.value);\n        this._dateFilter = value;\n        if (start && start._matchesFilter(start.value) !== wasMatchingStart) {\n            start._validatorOnChange();\n        }\n        if (end && end._matchesFilter(end.value) !== wasMatchingEnd) {\n            end._validatorOnChange();\n        }\n    }\n    /** The minimum valid date. */\n    get min() {\n        return this._min;\n    }\n    set min(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._min)) {\n            this._min = validValue;\n            this._revalidate();\n        }\n    }\n    /** The maximum valid date. */\n    get max() {\n        return this._max;\n    }\n    set max(value) {\n        const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n        if (!this._dateAdapter.sameDate(validValue, this._max)) {\n            this._max = validValue;\n            this._revalidate();\n        }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._startInput && this._endInput\n            ? this._startInput.disabled && this._endInput.disabled\n            : this._groupDisabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._groupDisabled) {\n            this._groupDisabled = newValue;\n            this.stateChanges.next(undefined);\n        }\n    }\n    /** Whether the input is in an error state. */\n    get errorState() {\n        if (this._startInput && this._endInput) {\n            return this._startInput.errorState || this._endInput.errorState;\n        }\n        return false;\n    }\n    /** Whether the datepicker input is empty. */\n    get empty() {\n        const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n        const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n        return startEmpty && endEmpty;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n    }\n    /**\n     * Implemented as a part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    onContainerClick() {\n        if (!this.focused && !this.disabled) {\n            if (!this._model || !this._model.selection.start) {\n                this._startInput.focus();\n            }\n            else {\n                this._endInput.focus();\n            }\n        }\n    }\n    ngAfterContentInit() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this._startInput) {\n                throw Error('mat-date-range-input must contain a matStartDate input');\n            }\n            if (!this._endInput) {\n                throw Error('mat-date-range-input must contain a matEndDate input');\n            }\n        }\n        if (this._model) {\n            this._registerModel(this._model);\n        }\n        // We don't need to unsubscribe from this, because we\n        // know that the input streams will be completed on destroy.\n        merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n            this.stateChanges.next(undefined);\n        });\n    }\n    ngOnChanges(changes) {\n        if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n            this.stateChanges.next(undefined);\n        }\n    }\n    ngOnDestroy() {\n        this._closedSubscription.unsubscribe();\n        this.stateChanges.complete();\n    }\n    /** Gets the date at which the calendar should start. */\n    getStartValue() {\n        return this.value ? this.value.start : null;\n    }\n    /** Gets the input's theme palette. */\n    getThemePalette() {\n        return this._formField ? this._formField.color : undefined;\n    }\n    /** Gets the element to which the calendar overlay should be attached. */\n    getConnectedOverlayOrigin() {\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n    }\n    /** Gets the ID of an element that should be used a description for the calendar overlay. */\n    getOverlayLabelId() {\n        return this._formField ? this._formField.getLabelId() : null;\n    }\n    /** Gets the value that is used to mirror the state input. */\n    _getInputMirrorValue() {\n        return this._startInput ? this._startInput.getMirrorValue() : '';\n    }\n    /** Whether the input placeholders should be hidden. */\n    _shouldHidePlaceholders() {\n        return this._startInput ? !this._startInput.isEmpty() : false;\n    }\n    /** Handles the value in one of the child inputs changing. */\n    _handleChildValueChange() {\n        this.stateChanges.next(undefined);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Opens the date range picker associated with the input. */\n    _openDatepicker() {\n        if (this._rangePicker) {\n            this._rangePicker.open();\n        }\n    }\n    /** Whether the separate text should be hidden. */\n    _shouldHideSeparator() {\n        return ((!this._formField ||\n            (this._formField.getLabelId() && !this._formField._shouldLabelFloat())) &&\n            this.empty);\n    }\n    /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n    _getAriaLabelledby() {\n        const formField = this._formField;\n        return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n    }\n    /** Updates the focused state of the range input. */\n    _updateFocus(origin) {\n        this.focused = origin !== null;\n        this.stateChanges.next();\n    }\n    /** Re-runs the validators on the start/end inputs. */\n    _revalidate() {\n        if (this._startInput) {\n            this._startInput._validatorOnChange();\n        }\n        if (this._endInput) {\n            this._endInput._validatorOnChange();\n        }\n    }\n    /** Registers the current date selection model with the start/end inputs. */\n    _registerModel(model) {\n        if (this._startInput) {\n            this._startInput._registerModel(model);\n        }\n        if (this._endInput) {\n            this._endInput._registerModel(model);\n        }\n    }\n}\nMatDateRangeInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInput, deps: [{ token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i2$2.ControlContainer, optional: true, self: true }, { token: i1$1.DateAdapter, optional: true }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatDateRangeInput.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDateRangeInput, selector: \"mat-date-range-input\", inputs: { rangePicker: \"rangePicker\", required: \"required\", dateFilter: \"dateFilter\", min: \"min\", max: \"max\", disabled: \"disabled\", separator: \"separator\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"class.mat-date-range-input-hide-placeholders\": \"_shouldHidePlaceholders()\", \"class.mat-date-range-input-required\": \"required\", \"attr.id\": \"null\", \"attr.aria-labelledby\": \"_getAriaLabelledby()\", \"attr.aria-describedby\": \"_ariaDescribedBy\", \"attr.data-mat-calendar\": \"rangePicker ? rangePicker.id : null\" }, classAttribute: \"mat-date-range-input\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n    ], queries: [{ propertyName: \"_startInput\", first: true, predicate: MatStartDate, descendants: true }, { propertyName: \"_endInput\", first: true, predicate: MatEndDate, descendants: true }], exportAs: [\"matDateRangeInput\"], usesOnChanges: true, ngImport: i0, template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"], directives: [{ type: i4.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangeInput, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-date-range-input', exportAs: 'matDateRangeInput', host: {\n                        'class': 'mat-date-range-input',\n                        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n                        '[class.mat-date-range-input-required]': 'required',\n                        '[attr.id]': 'null',\n                        'role': 'group',\n                        '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                        '[attr.aria-describedby]': '_ariaDescribedBy',\n                        // Used by the test harness to tie this input to its calendar. We can't depend on\n                        // `aria-owns` for this, because it's only defined while the calendar is open.\n                        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, providers: [\n                        { provide: MatFormFieldControl, useExisting: MatDateRangeInput },\n                        { provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput },\n                    ], template: \"<div\\n  class=\\\"mat-date-range-input-container\\\"\\n  cdkMonitorSubtreeFocus\\n  (cdkFocusChange)=\\\"_updateFocus($event)\\\">\\n  <div class=\\\"mat-date-range-input-start-wrapper\\\">\\n    <ng-content select=\\\"input[matStartDate]\\\"></ng-content>\\n    <span\\n      class=\\\"mat-date-range-input-mirror\\\"\\n      aria-hidden=\\\"true\\\">{{_getInputMirrorValue()}}</span>\\n  </div>\\n\\n  <span\\n    class=\\\"mat-date-range-input-separator\\\"\\n    [class.mat-date-range-input-separator-hidden]=\\\"_shouldHideSeparator()\\\">{{separator}}</span>\\n\\n  <div class=\\\"mat-date-range-input-end-wrapper\\\">\\n    <ng-content select=\\\"input[matEndDate]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n\", styles: [\".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.cdk-high-contrast-active .mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{opacity:0}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i2$2.ControlContainer, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i1$1.DateAdapter, decorators: [{\n                        type: Optional\n                    }] }, { type: i2$1.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { rangePicker: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], dateFilter: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], separator: [{\n                type: Input\n            }], comparisonStart: [{\n                type: Input\n            }], comparisonEnd: [{\n                type: Input\n            }], _startInput: [{\n                type: ContentChild,\n                args: [MatStartDate]\n            }], _endInput: [{\n                type: ContentChild,\n                args: [MatEndDate]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\nclass MatDateRangePicker extends MatDatepickerBase {\n    _forwardContentValues(instance) {\n        super._forwardContentValues(instance);\n        const input = this.datepickerInput;\n        if (input) {\n            instance.comparisonStart = input.comparisonStart;\n            instance.comparisonEnd = input.comparisonEnd;\n        }\n    }\n}\nMatDateRangePicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangePicker, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatDateRangePicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDateRangePicker, selector: \"mat-date-range-picker\", providers: [\n        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n    ], exportAs: [\"matDateRangePicker\"], usesInheritance: true, ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDateRangePicker, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-date-range-picker',\n                    template: '',\n                    exportAs: 'matDateRangePicker',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n                        MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n                        { provide: MatDatepickerBase, useExisting: MatDateRangePicker },\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Button that will close the datepicker and assign the current selection to the data model. */\nclass MatDatepickerApply {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n    _applySelection() {\n        this._datepicker._applyPendingSelection();\n        this._datepicker.close();\n    }\n}\nMatDatepickerApply.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerApply, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerApply.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerApply, selector: \"[matDatepickerApply], [matDateRangePickerApply]\", host: { listeners: { \"click\": \"_applySelection()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerApply, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerApply], [matDateRangePickerApply]',\n                    host: { '(click)': '_applySelection()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/** Button that will close the datepicker and discard the current selection. */\nclass MatDatepickerCancel {\n    constructor(_datepicker) {\n        this._datepicker = _datepicker;\n    }\n}\nMatDatepickerCancel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerCancel, deps: [{ token: MatDatepickerBase }], target: i0.ɵɵFactoryTarget.Directive });\nMatDatepickerCancel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerCancel, selector: \"[matDatepickerCancel], [matDateRangePickerCancel]\", host: { listeners: { \"click\": \"_datepicker.close()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerCancel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matDatepickerCancel], [matDateRangePickerCancel]',\n                    host: { '(click)': '_datepicker.close()' },\n                }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }]; } });\n/**\n * Container that can be used to project a row of action buttons\n * to the bottom of a datepicker or date range picker.\n */\nclass MatDatepickerActions {\n    constructor(_datepicker, _viewContainerRef) {\n        this._datepicker = _datepicker;\n        this._viewContainerRef = _viewContainerRef;\n    }\n    ngAfterViewInit() {\n        this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        this._datepicker.registerActions(this._portal);\n    }\n    ngOnDestroy() {\n        var _a;\n        this._datepicker.removeActions(this._portal);\n        // Needs to be null checked since we initialize it in `ngAfterViewInit`.\n        if (this._portal && this._portal.isAttached) {\n            (_a = this._portal) === null || _a === void 0 ? void 0 : _a.detach();\n        }\n    }\n}\nMatDatepickerActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerActions, deps: [{ token: MatDatepickerBase }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\nMatDatepickerActions.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatDatepickerActions, selector: \"mat-datepicker-actions, mat-date-range-picker-actions\", viewQueries: [{ propertyName: \"_template\", first: true, predicate: TemplateRef, descendants: true }], ngImport: i0, template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, isInline: true, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerActions, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-datepicker-actions, mat-date-range-picker-actions', template: `\n    <ng-template>\n      <div class=\"mat-datepicker-actions\">\n        <ng-content></ng-content>\n      </div>\n    </ng-template>\n  `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\".mat-datepicker-actions{display:flex;justify-content:flex-end;align-items:center;padding:0 8px 8px 8px}.mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:8px}[dir=rtl] .mat-datepicker-actions .mat-button-base+.mat-button-base{margin-left:0;margin-right:8px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: MatDatepickerBase }, { type: i0.ViewContainerRef }]; }, propDecorators: { _template: [{\n                type: ViewChild,\n                args: [TemplateRef]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatDatepickerModule {\n}\nMatDatepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatDatepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, declarations: [MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply], imports: [CommonModule,\n        MatButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        MatCommonModule], exports: [CdkScrollableModule,\n        MatCalendar,\n        MatCalendarBody,\n        MatDatepicker,\n        MatDatepickerContent,\n        MatDatepickerInput,\n        MatDatepickerToggle,\n        MatDatepickerToggleIcon,\n        MatMonthView,\n        MatYearView,\n        MatMultiYearView,\n        MatCalendarHeader,\n        MatDateRangeInput,\n        MatStartDate,\n        MatEndDate,\n        MatDateRangePicker,\n        MatDatepickerActions,\n        MatDatepickerCancel,\n        MatDatepickerApply] });\nMatDatepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            OverlayModule,\n            A11yModule,\n            PortalModule,\n            MatCommonModule,\n        ], CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatDatepickerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatButtonModule,\n                        OverlayModule,\n                        A11yModule,\n                        PortalModule,\n                        MatCommonModule,\n                    ],\n                    exports: [\n                        CdkScrollableModule,\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    declarations: [\n                        MatCalendar,\n                        MatCalendarBody,\n                        MatDatepicker,\n                        MatDatepickerContent,\n                        MatDatepickerInput,\n                        MatDatepickerToggle,\n                        MatDatepickerToggleIcon,\n                        MatMonthView,\n                        MatYearView,\n                        MatMultiYearView,\n                        MatCalendarHeader,\n                        MatDateRangeInput,\n                        MatStartDate,\n                        MatEndDate,\n                        MatDateRangePicker,\n                        MatDatepickerActions,\n                        MatDatepickerCancel,\n                        MatDatepickerApply,\n                    ],\n                    providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerActions, MatDatepickerApply, MatDatepickerCancel, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Output, Input, ContentChildren, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/collections';\n\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY,\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true,\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() {\n        return this._selected;\n    }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatRadioGroupBase, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatRadioGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatRadioGroupBase, inputs: { color: \"color\", name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\" }, outputs: { change: \"change\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatRadioGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { change: [{\n                type: Output\n            }], color: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }] } });\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioGroup, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRadioGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRadioGroup, selector: \"mat-radio-group\", host: { attributes: { \"role\": \"radiogroup\" }, classAttribute: \"mat-radio-group\" }, providers: [\n        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n    ], queries: [{ propertyName: \"_radios\", predicate: i0.forwardRef(function () { return MatRadioButton; }), descendants: true }], exportAs: [\"matRadioGroup\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-radio-group',\n                    exportAs: 'matRadioGroup',\n                    providers: [\n                        MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                        { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                    ],\n                    host: {\n                        'role': 'radiogroup',\n                        'class': 'mat-radio-group',\n                    },\n                }]\n        }], propDecorators: { _radios: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatRadioButton), { descendants: true }]\n            }] } });\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener = _radioDispatcher.listen((id, name) => {\n            if (id !== this.id && name === this.name) {\n                this.checked = false;\n            }\n        });\n    }\n    /** Whether this radio button is checked. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return (this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            (this._providerOverride && this._providerOverride.color) ||\n            'accent');\n    }\n    set color(newValue) {\n        this._color = newValue;\n    }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatRadioButtonBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatRadioButtonBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatRadioButtonBase, inputs: { id: \"id\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" }, viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatRadioButtonBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatRadioGroupBase }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined }, { type: undefined }, { type: undefined }]; }, propDecorators: { id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], checked: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioButton, deps: [{ token: MAT_RADIO_GROUP, optional: true }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i2.UniqueSelectionDispatcher }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_RADIO_DEFAULT_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component });\nMatRadioButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatRadioButton, selector: \"mat-radio-button\", inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_inputElement.nativeElement.focus()\" }, properties: { \"class.mat-radio-checked\": \"checked\", \"class.mat-radio-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mat-primary\": \"color === \\\"primary\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\", \"attr.tabindex\": \"null\", \"attr.id\": \"id\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.aria-describedby\": \"null\" }, classAttribute: \"mat-radio-button\" }, exportAs: [\"matRadioButton\"], usesInheritance: true, ngImport: i0, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], directives: [{ type: i3.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioButton, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-radio-button', inputs: ['disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, exportAs: 'matRadioButton', host: {\n                        'class': 'mat-radio-button',\n                        '[class.mat-radio-checked]': 'checked',\n                        '[class.mat-radio-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                        '[class.mat-primary]': 'color === \"primary\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.aria-describedby]': 'null',\n                        // Note: under normal conditions focus shouldn't land on this element, however it may be\n                        // programmatically set, for example inside of a focus trap, in this case we want to forward\n                        // the focus to the native element.\n                        '(focus)': '_inputElement.nativeElement.focus()',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatRadioGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RADIO_GROUP]\n                    }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i2.UniqueSelectionDispatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RADIO_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRadioModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioModule, declarations: [MatRadioGroup, MatRadioButton], imports: [MatRippleModule, MatCommonModule], exports: [MatRadioGroup, MatRadioButton, MatCommonModule] });\nMatRadioModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioModule, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatRadioModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                    declarations: [MatRadioGroup, MatRadioButton],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n","import * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i2 from '@angular/cdk/bidi';\n\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true,\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nconst _MatSliderBase = mixinTabIndex(mixinColor(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding and what the user is using to slide it with.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = null;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                this._touchId = isTouchEvent(event)\n                    ? getTouchIdForSlider(event, this._elementRef.nativeElement)\n                    : undefined;\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    const oldValue = this.value;\n                    this._isSliding = 'pointer';\n                    this._lastPointerEvent = event;\n                    event.preventDefault();\n                    this._focusHostElement();\n                    this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                    this._bindGlobalEvents(event);\n                    this._focusHostElement();\n                    this._updateValueFromPosition(pointerPosition);\n                    this._valueOnSlideStart = oldValue;\n                    // Emit a change and input event if the value changed.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding === 'pointer') {\n                const pointerPosition = getPointerPositionOnPage(event, this._touchId);\n                if (pointerPosition) {\n                    // Prevent the slide from selecting anything else.\n                    event.preventDefault();\n                    const oldValue = this.value;\n                    this._lastPointerEvent = event;\n                    this._updateValueFromPosition(pointerPosition);\n                    // Native range elements always emit `input` events when the value changed while sliding.\n                    if (oldValue != this.value) {\n                        this._emitInputEvent();\n                    }\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding === 'pointer') {\n                if (!isTouchEvent(event) ||\n                    typeof this._touchId !== 'number' ||\n                    // Note that we use `changedTouches`, rather than `touches` because it\n                    // seems like in most cases `touches` is empty for `touchend` events.\n                    findMatchingTouch(event.changedTouches, this._touchId)) {\n                    event.preventDefault();\n                    this._removeGlobalEvents();\n                    this._isSliding = null;\n                    this._touchId = undefined;\n                    if (this._valueOnSlideStart != this.value && !this.disabled) {\n                        this._emitChangeEvent();\n                    }\n                    this._valueOnSlideStart = this._lastPointerEvent = null;\n                }\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() {\n        return this._invert;\n    }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() {\n        return this._max;\n    }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() {\n        return this._min;\n    }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() {\n        return this._step;\n    }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() {\n        return this._thumbLabel;\n    }\n    set thumbLabel(value) {\n        this._thumbLabel = coerceBooleanProperty(value);\n    }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() {\n        return this._tickInterval;\n    }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v, 0);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal && value !== this.min && value !== this.max) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() {\n        return this._clamp(this._percent);\n    }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : '',\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = (this._tickIntervalPercent / 2) * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`,\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`,\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`,\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return this._getDirection() == 'rtl' && !this.vertical ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return this._dir && this._dir.value == 'rtl' ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled ||\n            hasModifierKey(event) ||\n            (this._isSliding && this._isSliding !== 'keyboard')) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = 'keyboard';\n        event.preventDefault();\n    }\n    _onKeyup() {\n        if (this._isSliding === 'keyboard') {\n            this._isSliding = null;\n        }\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = (trackSize * this.step) / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = (this.tickInterval * this.step) / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlider, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: i2.Directionality, optional: true }, { token: 'tabindex', attribute: true }, { token: i0.NgZone }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlider.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSlider, selector: \"mat-slider\", inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", value: \"value\", displayWith: \"displayWith\", valueText: \"valueText\", vertical: \"vertical\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, host: { attributes: { \"role\": \"slider\" }, listeners: { \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\", \"keydown\": \"_onKeydown($event)\", \"keyup\": \"_onKeyup()\", \"mouseenter\": \"_onMouseenter()\", \"selectstart\": \"$event.preventDefault()\" }, properties: { \"tabIndex\": \"tabIndex\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-valuemax\": \"max\", \"attr.aria-valuemin\": \"min\", \"attr.aria-valuenow\": \"value\", \"attr.aria-valuetext\": \"valueText == null ? displayValue : valueText\", \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-slider-disabled\": \"disabled\", \"class.mat-slider-has-ticks\": \"tickInterval\", \"class.mat-slider-horizontal\": \"!vertical\", \"class.mat-slider-axis-inverted\": \"_shouldInvertAxis()\", \"class.mat-slider-invert-mouse-coords\": \"_shouldInvertMouseCoords()\", \"class.mat-slider-sliding\": \"_isSliding\", \"class.mat-slider-thumb-label-showing\": \"thumbLabel\", \"class.mat-slider-vertical\": \"vertical\", \"class.mat-slider-min-value\": \"_isMinValue()\", \"class.mat-slider-hide-last-tick\": \"disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-slider mat-focus-indicator\" }, providers: [MAT_SLIDER_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_sliderWrapper\", first: true, predicate: [\"sliderWrapper\"], descendants: true }], exportAs: [\"matSlider\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], directives: [{ type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slider', exportAs: 'matSlider', providers: [MAT_SLIDER_VALUE_ACCESSOR], host: {\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                        '(keydown)': '_onKeydown($event)',\n                        '(keyup)': '_onKeyup()',\n                        '(mouseenter)': '_onMouseenter()',\n                        // On Safari starting to slide temporarily triggers text selection mode which\n                        // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                        '(selectstart)': '$event.preventDefault()',\n                        'class': 'mat-slider mat-focus-indicator',\n                        'role': 'slider',\n                        '[tabIndex]': 'tabIndex',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-valuemax]': 'max',\n                        '[attr.aria-valuemin]': 'min',\n                        '[attr.aria-valuenow]': 'value',\n                        // NVDA and Jaws appear to announce the `aria-valuenow` by calculating its percentage based\n                        // on its value between `aria-valuemin` and `aria-valuemax`. Due to how decimals are handled,\n                        // it can cause the slider to read out a very long value like 0.20000068 if the current value\n                        // is 0.2 with a min of 0 and max of 1. We work around the issue by setting `aria-valuetext`\n                        // to the same value that we set on the slider's thumb which will be truncated.\n                        '[attr.aria-valuetext]': 'valueText == null ? displayValue : valueText',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-slider-disabled]': 'disabled',\n                        '[class.mat-slider-has-ticks]': 'tickInterval',\n                        '[class.mat-slider-horizontal]': '!vertical',\n                        '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if mouse coordinates need to be inverted.\n                        '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                        '[class.mat-slider-sliding]': '_isSliding',\n                        '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                        '[class.mat-slider-vertical]': 'vertical',\n                        '[class.mat-slider-min-value]': '_isMinValue()',\n                        '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, inputs: ['disabled', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{-webkit-print-color-adjust:exact;color-adjust:exact;position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{-webkit-background-clip:content-box;background-clip:content-box;background-repeat:repeat;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: i2.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { invert: [{\n                type: Input\n            }], max: [{\n                type: Input\n            }], min: [{\n                type: Input\n            }], step: [{\n                type: Input\n            }], thumbLabel: [{\n                type: Input\n            }], tickInterval: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], displayWith: [{\n                type: Input\n            }], valueText: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], input: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _sliderWrapper: [{\n                type: ViewChild,\n                args: ['sliderWrapper']\n            }] } });\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event, id) {\n    let point;\n    if (isTouchEvent(event)) {\n        // The `identifier` could be undefined if the browser doesn't support `TouchEvent.identifier`.\n        // If that's the case, attribute the first touch to all active sliders. This should still cover\n        // the most common case while only breaking multi-touch.\n        if (typeof id === 'number') {\n            point = findMatchingTouch(event.touches, id) || findMatchingTouch(event.changedTouches, id);\n        }\n        else {\n            // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n            point = event.touches[0] || event.changedTouches[0];\n        }\n    }\n    else {\n        point = event;\n    }\n    return point ? { x: point.clientX, y: point.clientY } : undefined;\n}\n/** Finds a `Touch` with a specific ID in a `TouchList`. */\nfunction findMatchingTouch(touches, id) {\n    for (let i = 0; i < touches.length; i++) {\n        if (touches[i].identifier === id) {\n            return touches[i];\n        }\n    }\n    return undefined;\n}\n/** Gets the unique ID of a touch that matches a specific slider. */\nfunction getTouchIdForSlider(event, sliderHost) {\n    for (let i = 0; i < event.touches.length; i++) {\n        const target = event.touches[i].target;\n        if (sliderHost === target || sliderHost.contains(target)) {\n            return event.touches[i].identifier;\n        }\n    }\n    return undefined;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSliderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSliderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSliderModule, declarations: [MatSlider], imports: [CommonModule, MatCommonModule], exports: [MatSlider, MatCommonModule] });\nMatSliderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSliderModule, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSliderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSlider, MatCommonModule],\n                    declarations: [MatSlider],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n"],"names":["ActiveDescendantKeyManager","coerceBooleanProperty","coerceStringArray","i0","InjectionToken","EventEmitter","TemplateRef","Directive","Inject","ViewChild","Input","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","forwardRef","Optional","Host","NgModule","mixinDisableRipple","MAT_OPTION_PARENT_COMPONENT","MAT_OPTGROUP","MatOption","MatOptionSelectionChange","_countGroupLabelsBeforeOption","_getOptionScrollPosition","MatOptionModule","MatCommonModule","Subscription","Subject","defer","merge","of","fromEvent","i1","_getEventTarget","i2","DOCUMENT","CommonModule","i1$1","Overlay","OverlayConfig","OverlayModule","i3","CdkScrollableModule","ESCAPE","hasModifierKey","ENTER","UP_ARROW","DOWN_ARROW","TAB","TemplatePortal","NG_VALUE_ACCESSOR","i4","MAT_FORM_FIELD","take","switchMap","filter","map","tap","delay","i2$1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","constructor","source","option","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","platform","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_classList","id","inertGroups","SAFARI","_autoActiveFirstOption","isOpen","value","classList","length","reduce","className","_setVisibilityClasses","nativeElement","ngAfterContentInit","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","ngOnDestroy","unsubscribe","_setScrollTop","scrollTop","panel","_getScrollTop","markForCheck","_emitSelectEvent","event","_getPanelAriaLabelledby","labelId","ariaLabel","labelExpression","ariaLabelledby","_visibleClass","_hiddenClass","ɵfac","ChangeDetectorRef","ElementRef","Platform","ɵdir","type","undefined","decorators","args","template","static","panelWidth","MatAutocomplete","arguments","ɵcmp","provide","useExisting","NgClass","selector","encapsulation","None","changeDetection","OnPush","exportAs","inputs","host","providers","styles","optionGroups","descendants","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_defaults","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","onSelectionChange","onStable","pipe","_scrollStrategy","autocompleteDisabled","ngAfterViewInit","window","_getWindow","runOutsideAngular","addEventListener","ngOnChanges","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","openPanel","_attachOverlay","_floatLabel","closePanel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","panelClosingActions","tabOut","_getOutsideClickStream","detachments","activeOption","activeItem","clickTarget","formField","customOrigin","connectedTo","elementRef","contains","overlayElement","writeValue","Promise","resolve","then","_setTriggerValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","_handleKeydown","keyCode","preventDefault","_selectViaInteraction","_resetActiveItem","prevActiveItem","isArrowKey","onKeydown","_canOpen","_scrollToOption","activeItemIndex","_handleInput","target","parseFloat","_previousValue","_handleFocus","shouldAnimate","floatLabel","_animateAndLockLabel","_subscribeToClosingActions","firstStable","optionChanges","reapplyLastPosition","wasOpen","_setValueAndClose","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","skip","forEach","selected","deselect","_a","ngDevMode","overlayRef","_portal","getLabelId","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","positionStrategy","_getOverlayPosition","direction","panelClass","overlayPanelClass","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setFirstItemActive","setActiveItem","element","readOnly","defaultView","labelCount","_getHostElement","newScrollPosition","offsetTop","offsetHeight","ViewContainerRef","NgZone","Directionality","ViewportRuler","MatFormField","_MatAutocompleteOriginBase","MatAutocompleteOrigin","MatAutocompleteModule","ɵmod","ɵinj","imports","exports","declarations","A11yModule","i9","FlexibleConnectedPositionStrategy","i8","ComponentPortal","PortalModule","Injectable","SkipSelf","Attribute","ContentChild","InjectFlags","Self","MatButtonModule","DateAdapter","MAT_DATE_FORMATS","mixinColor","mixinErrorState","SPACE","PAGE_DOWN","PAGE_UP","END","HOME","RIGHT_ARROW","LEFT_ARROW","BACKSPACE","startWith","_getFocusedElementPierceShadowDom","trigger","transition","animate","keyframes","style","state","i2$2","NG_VALIDATORS","Validators","NgControl","MatFormFieldControl","MAT_INPUT_VALUE_ACCESSOR","createMissingDateImplError","provider","MatCalendarCell","displayValue","enabled","cssClasses","compareValue","rawValue","MatCalendarBody","_ngZone","numCols","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","cell","_getCellFromElement","run","_leaveHandler","isTableCell","_cellClicked","_isSelected","startValue","endValue","columnChanges","rows","_firstRowOffset","_cellPadding","_cellWidth","_isActiveCell","rowIndex","colIndex","cellNumber","_focusActiveCell","movePreview","querySelector","_isRangeStart","isStart","_isRangeEnd","isEnd","_isInRange","isInRange","_isComparisonStart","comparisonStart","comparisonEnd","_isComparisonBridgeStart","previousCell","previousRow","_isComparisonBridgeEnd","_isComparisonEnd","nextCell","nextRow","_isInComparisonRange","_isComparisonIdentical","_isPreviewStart","_isPreviewEnd","_isInPreview","parentNode","row","getAttribute","col","parseInt","NgIf","NgForOf","label","todayValue","labelMinRequiredCells","node","nodeName","start","end","rangeEnabled","DateRange","MatDateSelectionModel","selection","_adapter","_selectionChanged","selectionChanged","updateSelection","oldValue","_isValidDateInstance","date","isDateInstance","isValid","ɵprov","MatSingleDateSelectionModel","adapter","add","isComplete","clone","MatRangeDateSelectionModel","compareDate","MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY","parent","MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER","MAT_RANGE_DATE_SELECTION_MODEL_FACTORY","MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER","MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultMatCalendarRangeStrategy","_dateAdapter","selectionFinished","currentRange","createPreview","activeDate","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY","MAT_CALENDAR_RANGE_STRATEGY_PROVIDER","DAYS_PER_WEEK","MatMonthView","_dateFormats","_rangeStrategy","_rerenderSubscription","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","getValidDateOrNull","deserialize","clampDate","minDate","maxDate","_hasSameMonthAndYear","_init","_selected","_setRanges","_minDate","_maxDate","localeChanges","comparisonChange","firstChange","_dateSelected","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_previewStart","_previewEnd","_handleCalendarBodyKeydown","isRtl","_isRtl","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","_selectionKeyPressed","_canSelect","_handleCalendarBodyKeyup","_todayDate","_getCellCompareValue","_monthLabel","display","monthLabel","format","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","_matCalendarBody","_previewChanged","previewRange","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","i","narrow","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","push","_shouldEnableDate","dateA11yLabel","cellClasses","dateClass","dateFilter","d1","d2","year","month","day","Date","getTime","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","yearsPerPage","yearsPerRow","MatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","Math","min","_getActiveCell","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","a","b","MatYearView","monthSelected","_setSelectedMonth","_monthSelected","normalizedDate","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","MatDatepickerIntl","calendarLabel","openCalendarLabel","closeCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","formatYearRange","uniqueId","MatCalendarHeader","_intl","calendar","changeDetectorRef","_buttonDescriptionId","stateChanges","periodButtonText","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","periodButtonLabel","prevButtonLabel","nextButtonLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatCalendar","MatButton","CdkAriaLive","_moveFocusOnNextTick","startView","viewChanged","_intlChanges","startAt","_startAt","_clampedActiveDate","_currentView","viewChangedResult","_calendarHeaderPortal","headerComponent","ngAfterViewChecked","focusActiveCell","view","_getCurrentViewComponent","updateTodaysDate","sameDate","_yearSelectedInMultiYearView","normalizedYear","_monthSelectedInYearView","normalizedMonth","_goToDateInView","monthView","yearView","multiYearView","CdkPortalOutlet","CdkMonitorFocus","NgSwitch","NgSwitchCase","matDatepickerAnimations","transformPanel","opacity","transform","fadeInCalendar","datepickerUid","MAT_DATEPICKER_SCROLL_STRATEGY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","_MatDatepickerContentBase","MatDatepickerContent","_globalModel","_rangeSelectionStrategy","intl","_subscriptions","_animationDone","_actionsPortal","_closeButtonText","ngOnInit","_model","_animationState","datepicker","touchUi","_calendar","_handleUserSelection","newSelection","close","_startExitAnimation","_getSelected","_applyPendingSelection","CdkTrapFocus","animations","MatDatepickerBase","_inputStateChanges","_touchUi","xPosition","yPosition","_restoreFocus","openedStream","closedStream","_opened","_focusedElementBeforeOpen","_backdropHarnessClass","datepickerInput","getStartValue","color","_color","getThemePalette","_disabled","newValue","restoreFocus","_panelClass","open","_getMinDate","_getMaxDate","max","_getDateFilter","positionChange","getConfig","_setConnectedPositions","_destroyOverlay","select","_selectYear","_selectMonth","_viewChanged","registerInput","input","registerActions","portal","removeActions","_openOverlay","_componentRef","instance","completeClose","setTimeout","_b","_forwardContentValues","isDialog","getOverlayLabelId","_getDialogStrategy","_getDropdownStrategy","hasBackdrop","backdropClass","block","setAttribute","_getCloseStream","global","centerHorizontally","centerVertically","withTransformOriginOn","withViewportMargin","withLockedPosition","primaryX","secondaryX","primaryY","secondaryY","backdropClick","calendarHeaderComponent","MatDatepicker","MatDatepickerInputEvent","targetElement","MatDatepickerInputBase","dateChange","dateInput","_validatorOnChange","_cvaOnChange","_valueChangesSubscription","_localeSubscription","_parseValidator","_lastValueValid","_filterValidator","control","controlValue","_matchesFilter","_minValidator","_maxValidator","_assignValueProgrammatically","_getValueFromModel","_pendingValue","_parentDisabled","_isInitialized","blur","_getValidators","_registerModel","model","_assignValue","_shouldHandleChangeEvent","_isValidValue","_formatValue","dateInputsHaveChanged","registerOnValidatorChange","validate","c","_validator","_onKeydown","isAltDownArrow","_openPopup","_onInput","lastValueWasValid","parse","_onBlur","_assignValueToModel","keys","Object","key","previousValue","currentValue","MAT_DATEPICKER_VALUE_ACCESSOR","MatDatepickerInput","MAT_DATEPICKER_VALIDATORS","dateFormats","_closedSubscription","compose","matDatepicker","_datepicker","_min","validValue","_max","_dateFilter","wasMatchingValue","modelValue","MatDatepickerToggleIcon","MatDatepickerToggle","defaultTabIndex","_stateChanges","parsedTabIndex","Number","tabIndex","_watchStateChanges","_open","datepickerStateChanged","inputStateChanged","datepickerToggled","disableRipple","_customIcon","_button","MAT_DATE_RANGE_INPUT_PARENT","MatDateRangeInputPartBase","_rangeInput","_defaultErrorStateMatcher","_injector","_parentForm","_parentFormGroup","ngControl","get","ngDoCheck","updateErrorState","isEmpty","_getPlaceholder","placeholder","_handleChildValueChange","_openDatepicker","_groupDisabled","_startInput","_endInput","opposite","ErrorStateMatcher","Injector","NgForm","FormGroupDirective","_MatDateRangeInputBase","MatStartDate","rangeInput","defaultErrorStateMatcher","injector","parentForm","parentFormGroup","_startValidator","range","getMirrorValue","outputs","MatEndDate","_endValidator","nextUniqueId","MatDateRangeInput","focused","controlType","_ariaDescribedBy","separator","shouldLabelFloat","empty","rangePicker","_rangePicker","required","_required","wasMatchingStart","wasMatchingEnd","_revalidate","errorState","startEmpty","endEmpty","setDescribedByIds","ids","join","onContainerClick","_getInputMirrorValue","_shouldHidePlaceholders","_shouldHideSeparator","_shouldLabelFloat","_getAriaLabelledby","_hasFloatingLabel","_labelId","_updateFocus","origin","ControlContainer","MatDateRangePicker","MatDatepickerApply","_applySelection","MatDatepickerCancel","MatDatepickerActions","_template","isAttached","MatDatepickerModule","mixinTabIndex","MatRippleModule","coerceNumberProperty","ANIMATION_MODULE_TYPE","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_labelPosition","_controlValueAccessorChangeFn","onTouched","name","_updateRadioButtonNames","labelPosition","v","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","checked","_touch","_radios","radio","_markForCheck","isAlreadySelected","_emitChangeEvent","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_focusMonitor","_radioDispatcher","animationMode","_providerOverride","_uniqueId","_checked","_removeUniqueSelectionListener","_noopAnimations","listen","newCheckedState","notify","_setDisabled","inputId","focusVia","_inputElement","monitor","focusOrigin","stopMonitoring","_isRippleDisabled","_onInputClick","_onInputInteraction","groupValueChanged","FocusMonitor","UniqueSelectionDispatcher","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","providerOverride","MatRipple","MatRadioModule","mixinDisabled","normalizePassiveListenerOptions","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","_MatSliderBase","_animationMode","_invert","_step","_thumbLabel","_tickInterval","_vertical","valueChange","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_dirChangeSubscription","_pointerDown","isTouchEvent","button","_touchId","getTouchIdForSlider","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","findMatchingTouch","changedTouches","_removeGlobalEvents","_windowBlur","invert","_calculatePercentage","step","_roundToDecimal","toString","split","pop","thumbLabel","tickInterval","toFixed","vertical","_blurHostElement","percent","_clamp","_shouldInvertAxis","_isMinValue","_getThumbGap","_getTrackBackgroundStyles","axis","scale","sign","_shouldInvertMouseCoords","_getTrackFillStyles","_getTicksContainerStyles","_getDirection","offset","_getTicksStyles","tickSize","backgroundSize","rotate","shouldInvertAxis","side","_getThumbContainerStyles","invertOffset","_getSliderDimensions","_updateTickIntervalPercent","_onFocus","_increment","_onKeyup","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","pos","top","left","size","height","posComponent","y","x","exactValue","_calculateValue","closestValue","round","_createChangeEvent","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","percentage","_sliderWrapper","NgStyle","valueText","point","touches","clientX","clientY","identifier","sliderHost","MatSliderModule"],"sourceRoot":"webpack:///"}