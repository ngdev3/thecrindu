{"version":3,"file":"default-node_modules_angular_material_fesm2015_tooltip_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2015/layout.mjs","./node_modules/@angular/material/fesm2015/tooltip.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutModule {\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LayoutModule });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LayoutModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakpointObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i7 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i6 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport * as i5 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        this._showDelay = this._defaultOptions.showDelay;\n        this._hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        };\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n        _ngZone.runOutsideAngular(() => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        var _a;\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled ||\n            !this.message ||\n            (this._isTooltipVisible() &&\n                !this._tooltipInstance._showTimeoutId &&\n                !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        this._tooltipInstance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => { var _a; return (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a._handleBodyInteraction(); });\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset(Object.assign(Object.assign({}, origin.main), overlay.main)),\n            this._addOffset(Object.assign(Object.assign({}, origin.fallback), overlay.fallback)),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push(['mouseleave', () => this.hide()], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatTooltipBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined }, { type: i5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i2.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: i4.AriaDescriber }, { token: i4.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout(() => {\n            this._visibility = 'visible';\n            this._showTimeoutId = undefined;\n            this._onShow();\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = undefined;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    ngOnDestroy() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._onHide.complete();\n    }\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    _animationDone(event) {\n        const toState = event.toState;\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n}\n_TooltipComponentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_TooltipComponentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: _TooltipComponentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver) {\n        super(changeDetectorRef);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n}\nTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i6.BreakpointObserver }], target: i0.ɵɵFactoryTarget.Component });\nTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, properties: { \"style.zoom\": \"_visibility === \\\"visible\\\" ? 1 : null\" } }, usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], directives: [{ type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"async\": i7.AsyncPipe }, animations: [matTooltipAnimations.tooltipState], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matTooltipAnimations.tooltipState], host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                        'aria-hidden': 'true',\n                    }, template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i6.BreakpointObserver }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\nMatTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[A11yModule, CommonModule, OverlayModule, MatCommonModule], MatCommonModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["i0","NgModule","Injectable","coerceArray","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","i1","LayoutModule","ɵfac","ɵmod","ɵinj","type","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","constructor","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","BLINK","createEmptyStyleRule","Platform","ɵprov","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","ngOnDestroy","next","complete","isMatched","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","NgZone","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","Overlay","OverlayModule","i4","A11yModule","i7","DOCUMENT","CommonModule","InjectionToken","Directive","Inject","Input","Optional","Component","ViewEncapsulation","ChangeDetectionStrategy","MatCommonModule","i2","CdkScrollableModule","coerceBooleanProperty","coerceNumberProperty","ESCAPE","hasModifierKey","i6","i3","normalizePassiveListenerOptions","ComponentPortal","trigger","state","style","transition","animate","keyframes","i5","matTooltipAnimations","tooltipState","opacity","transform","offset","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","passive","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","position","Error","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","useFactory","MAT_TOOLTIP_DEFAULT_OPTIONS","factory","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","_MatTooltipBase","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","_position","_disabled","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","_showDelay","_hideDelay","touchGestures","_message","_passiveListeners","_destroyed","_handleKeydown","event","_isTooltipVisible","keyCode","preventDefault","stopPropagation","hide","_scrollStrategy","change","subscribe","_overlayRef","_updatePosition","runOutsideAngular","nativeElement","addEventListener","_a","_tooltipInstance","show","updatePosition","disabled","_setupPointerEnterEventsIfNeeded","message","removeDescription","String","_updateTooltipMessage","Promise","resolve","then","describe","tooltipClass","_tooltipClass","_setTooltipClass","ngAfterViewInit","monitor","origin","clearTimeout","_touchstartTimeout","dispose","removeEventListener","listener","length","stopMonitoring","delay","_showTimeoutId","_hideTimeoutId","overlayRef","_createOverlay","_detach","_portal","_tooltipComponent","attach","instance","afterHidden","toggle","isVisible","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","direction","positionStrategy","panelClass","detachments","outsidePointerEvents","_handleBodyInteraction","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","_addOffset","Object","assign","main","fallback","isLtr","originPosition","originX","originY","ngDevMode","x","y","_invertPosition","overlayPosition","overlayX","overlayY","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","removePanelClass","addPanelClass","_platformSupportsMouseEvents","push","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","setTimeout","_addListeners","exitListeners","_wheelListener","touchendListener","listeners","IOS","ANDROID","elementUnderPointer","elementFromPoint","clientX","clientY","element","contains","gestures","nodeName","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","ɵdir","ElementRef","ScrollDispatcher","ViewContainerRef","AriaDescriber","FocusMonitor","undefined","Directionality","decorators","MatTooltip","elementRef","scrollDispatcher","viewContainerRef","ngZone","platform","ariaDescriber","focusMonitor","dir","defaultOptions","TooltipComponent","selector","exportAs","host","_TooltipComponentBase","_changeDetectorRef","_visibility","_closeOnInteraction","_onHide","_onShow","_animationStart","_animationDone","toState","markForCheck","ChangeDetectorRef","changeDetectorRef","_breakpointObserver","_isHandset","ɵcmp","NgClass","AsyncPipe","encapsulation","None","changeDetection","OnPush","animations","template","styles","MatTooltipModule","imports","exports","declarations","providers"],"sourceRoot":"webpack:///"}