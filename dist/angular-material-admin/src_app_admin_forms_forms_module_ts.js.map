{"version":3,"file":"src_app_admin_forms_forms_module_ts.js","mappings":"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","sources":["./src/app/admin/forms/auto-complete/auto-complete.component.ts","./src/app/admin/forms/auto-complete/auto-complete.component.html","./src/app/admin/forms/auto-complete/states-group/states-group.component.ts","./src/app/admin/forms/auto-complete/states-group/states-group.component.html","./src/app/admin/forms/checkbox/checkbox.component.ts","./src/app/admin/forms/checkbox/checkbox.component.html","./src/app/admin/forms/datepicker/datepicker.component.ts","./src/app/admin/forms/datepicker/datepicker.component.html","./src/app/admin/forms/datepicker/selected-value/selected-value.component.ts","./src/app/admin/forms/datepicker/selected-value/selected-value.component.html","./src/app/admin/forms/forms-routing.module.ts","./src/app/admin/forms/forms.module.ts","./src/app/admin/forms/home/home.component.ts","./src/app/admin/forms/home/home.component.html","./src/app/admin/forms/inputs/inputs.component.ts","./src/app/admin/forms/inputs/inputs.component.html","./src/app/admin/forms/other/other.component.ts","./src/app/admin/forms/other/other.component.html","./src/app/admin/forms/slider/slider.component.ts","./src/app/admin/forms/slider/slider.component.html","./node_modules/@angular/material/fesm2015/slide-toggle.mjs"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\ninterface User {\r\n  name: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-auto-complete',\r\n  templateUrl: './auto-complete.component.html',\r\n  styleUrls: ['./auto-complete.component.scss']\r\n})\r\nexport class AutoCompleteComponent implements OnInit {\r\n  myControl = new FormControl();\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]>;\r\n  myControl2 = new FormControl();\r\n  options2: User[] = [{ name: 'Mary' }, { name: 'Shelley' }, { name: 'Igor' }];\r\n  filteredOptions2: Observable<User[]>;\r\n  myControl3 = new FormControl();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.filteredOptions = this.myControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filter(value))\r\n    );\r\n    this.filteredOptions2 = this.myControl2.valueChanges.pipe(\r\n      startWith<string | User>(''),\r\n      map(value => (typeof value === 'string' ? value : value.name)),\r\n      map(name => (name ? this._filter2(name) : this.options2.slice()))\r\n    );\r\n  }\r\n\r\n  displayFn(user?: User): string | undefined {\r\n    return user ? user.name : undefined;\r\n  }\r\n\r\n  private _filter2(name: string): User[] {\r\n    const filterValue = name.toLowerCase();\r\n    return this.options2.filter(o => o.name.toLowerCase().includes(filterValue));\r\n  }\r\n  private _filter(value: string): string[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.options.filter(o => o.toLowerCase().includes(filterValue));\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutAlign=\"space-around stretch\">\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Simple autocomplete</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"auto-field\">\r\n      <mat-form-field>\r\n        <input type=\"text\" placeholder=\"Pick one\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\r\n        <mat-autocomplete #auto=\"matAutocomplete\">\r\n          <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\r\n            {{option}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Display value autocomplete</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"auto-field\">\r\n      <mat-form-field>\r\n        <input type=\"text\" placeholder=\"Assignee\" aria-label=\"Assignee\" matInput [formControl]=\"myControl2\" [matAutocomplete]=\"auto2\">\r\n        <mat-autocomplete #auto2=\"matAutocomplete\" [displayWith]=\"displayFn\">\r\n          <mat-option *ngFor=\"let option of filteredOptions2 | async\" [value]=\"option\">\r\n            {{option.name}}\r\n          </mat-option>\r\n        </mat-autocomplete>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Attaching the autocomplete panel</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"auto-field\">\r\n      <div class=\"custom-wrapper-example\" matAutocompleteOrigin #origin=\"matAutocompleteOrigin\">\r\n        <input matInput placeholder=\"Pick one\" [formControl]=\"myControl3\" [matAutocomplete]=\"auto3\" [matAutocompleteConnectedTo]=\"origin\">\r\n      </div>\r\n\r\n      <mat-autocomplete #auto3=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let option of options\" [value]=\"option\">{{option}}</mat-option>\r\n      </mat-autocomplete>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Option groups</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"auto-field\">\r\n      <app-states-group></app-states-group>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\ninterface StateGroup {\r\n  letter: string;\r\n  names: string[];\r\n}\r\n\r\nexport const _filter = (opt: string[], value: string): string[] => {\r\n  const filterValue = value.toLowerCase();\r\n  return opt.filter(item => item.toLowerCase().indexOf(filterValue) === 0);\r\n};\r\n\r\n@Component({\r\n  selector: 'app-states-group',\r\n  templateUrl: './states-group.component.html',\r\n  styleUrls: ['./states-group.component.scss']\r\n})\r\nexport class StatesGroupComponent implements OnInit {\r\n  stateForm: FormGroup = this.fb.group({\r\n    stateGroup: ''\r\n  });\r\n\r\n  stateGroups: StateGroup[] = [\r\n    {\r\n      letter: 'A',\r\n      names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\r\n    },\r\n    {\r\n      letter: 'C',\r\n      names: ['California', 'Colorado', 'Connecticut']\r\n    },\r\n    {\r\n      letter: 'D',\r\n      names: ['Delaware']\r\n    },\r\n    {\r\n      letter: 'F',\r\n      names: ['Florida']\r\n    },\r\n    {\r\n      letter: 'G',\r\n      names: ['Georgia']\r\n    },\r\n    {\r\n      letter: 'H',\r\n      names: ['Hawaii']\r\n    },\r\n    {\r\n      letter: 'I',\r\n      names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\r\n    },\r\n    {\r\n      letter: 'K',\r\n      names: ['Kansas', 'Kentucky']\r\n    },\r\n    {\r\n      letter: 'L',\r\n      names: ['Louisiana']\r\n    },\r\n    {\r\n      letter: 'M',\r\n      names: [\r\n        'Maine',\r\n        'Maryland',\r\n        'Massachusetts',\r\n        'Michigan',\r\n        'Minnesota',\r\n        'Mississippi',\r\n        'Missouri',\r\n        'Montana'\r\n      ]\r\n    },\r\n    {\r\n      letter: 'N',\r\n      names: [\r\n        'Nebraska',\r\n        'Nevada',\r\n        'New Hampshire',\r\n        'New Jersey',\r\n        'New Mexico',\r\n        'New York',\r\n        'North Carolina',\r\n        'North Dakota'\r\n      ]\r\n    },\r\n    {\r\n      letter: 'O',\r\n      names: ['Ohio', 'Oklahoma', 'Oregon']\r\n    },\r\n    {\r\n      letter: 'P',\r\n      names: ['Pennsylvania']\r\n    },\r\n    {\r\n      letter: 'R',\r\n      names: ['Rhode Island']\r\n    },\r\n    {\r\n      letter: 'S',\r\n      names: ['South Carolina', 'South Dakota']\r\n    },\r\n    {\r\n      letter: 'T',\r\n      names: ['Tennessee', 'Texas']\r\n    },\r\n    {\r\n      letter: 'U',\r\n      names: ['Utah']\r\n    },\r\n    {\r\n      letter: 'V',\r\n      names: ['Vermont', 'Virginia']\r\n    },\r\n    {\r\n      letter: 'W',\r\n      names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n    }\r\n  ];\r\n\r\n  stateGroupOptions: Observable<StateGroup[]>;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.stateGroupOptions = this.stateForm.get('stateGroup').valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterGroup(value))\r\n    );\r\n  }\r\n\r\n  private _filterGroup(value: string): StateGroup[] {\r\n    if (value) {\r\n      return this.stateGroups\r\n        .map(group => ({\r\n          letter: group.letter,\r\n          names: _filter(group.names, value)\r\n        }))\r\n        .filter(group => group.names.length > 0);\r\n    }\r\n\r\n    return this.stateGroups;\r\n  }\r\n}\r\n","<form [formGroup]=\"stateForm\">\r\n  <mat-form-field>\r\n    <input type=\"text\" matInput placeholder=\"States Group\" formControlName=\"stateGroup\" required [matAutocomplete]=\"autoGroup\">\r\n    <mat-autocomplete #autoGroup=\"matAutocomplete\">\r\n      <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\r\n        <mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\r\n          {{name}}\r\n        </mat-option>\r\n      </mat-optgroup>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\ninterface Food {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\ninterface Animal {\r\n  name: string;\r\n  sound: string;\r\n}\r\n\r\ninterface Pokemon {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\ninterface PokemonGroup {\r\n  disabled?: boolean;\r\n  name: string;\r\n  pokemon: Pokemon[];\r\n}\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nclass MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  selected = '';\r\n  selectedValue: string;\r\n\r\n  foods: Food[] = [\r\n    { value: 'steak-0', viewValue: 'Steak' },\r\n    { value: 'pizza-1', viewValue: 'Pizza' },\r\n    { value: 'tacos-2', viewValue: 'Tacos' }\r\n  ];\r\n\r\n  animalControl = new FormControl('', [Validators.required]);\r\n  animals: Animal[] = [\r\n    { name: 'Dog', sound: 'Woof!' },\r\n    { name: 'Cat', sound: 'Meow!' },\r\n    { name: 'Cow', sound: 'Moo!' },\r\n    { name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!' }\r\n  ];\r\n\r\n  disableSelect = new FormControl(false);\r\n\r\n  pokemonControl = new FormControl();\r\n  pokemonGroups: PokemonGroup[] = [\r\n    {\r\n      name: 'Grass',\r\n      pokemon: [\r\n        { value: 'bulbasaur-0', viewValue: 'Bulbasaur' },\r\n        { value: 'oddish-1', viewValue: 'Oddish' },\r\n        { value: 'bellsprout-2', viewValue: 'Bellsprout' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Water',\r\n      pokemon: [\r\n        { value: 'squirtle-3', viewValue: 'Squirtle' },\r\n        { value: 'psyduck-4', viewValue: 'Psyduck' },\r\n        { value: 'horsea-5', viewValue: 'Horsea' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Fire',\r\n      disabled: true,\r\n      pokemon: [\r\n        { value: 'charmander-6', viewValue: 'Charmander' },\r\n        { value: 'vulpix-7', viewValue: 'Vulpix' },\r\n        { value: 'flareon-8', viewValue: 'Flareon' }\r\n      ]\r\n    },\r\n    {\r\n      name: 'Psychic',\r\n      pokemon: [\r\n        { value: 'mew-9', viewValue: 'Mew' },\r\n        { value: 'mewtwo-10', viewValue: 'Mewtwo' }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  toppings = new FormControl();\r\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\r\n\r\n\r\n  selected2 = new FormControl('valid', [\r\n    Validators.required,\r\n    Validators.pattern('valid'),\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutAlign=\"space-around stretch\">\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Checkbox</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-checkbox>Check me!</mat-checkbox>\r\n      <mat-checkbox labelPosition=\"before\">Check me!</mat-checkbox>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Radio Group</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-radio-group>\r\n        <mat-radio-button value=\"1\">Option 1</mat-radio-button>\r\n        <mat-radio-button value=\"2\">Option 2</mat-radio-button>\r\n      </mat-radio-group>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Select</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <mat-select [(value)]=\"selected\">\r\n          <mat-option>None</mat-option>\r\n          <mat-option value=\"option1\">Option 1</mat-option>\r\n          <mat-option value=\"option2\">Option 2</mat-option>\r\n          <mat-option value=\"option3\">Option 3</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n\r\n      <p>You selected: {{selected}}</p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Select in a form</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <form>\r\n        <mat-form-field>\r\n          <mat-select placeholder=\"Favorite food\" [(ngModel)]=\"selectedValue\" name=\"food\">\r\n            <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\r\n              {{food.viewValue}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n\r\n        <p> Selected value: {{selectedValue}} </p>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Form field features</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <mat-select placeholder=\"Favorite animal\" [formControl]=\"animalControl\" required>\r\n          <mat-option>--</mat-option>\r\n          <mat-option *ngFor=\"let animal of animals\" [value]=\"animal\">\r\n            {{animal.name}}\r\n          </mat-option>\r\n        </mat-select>\r\n        <mat-error *ngIf=\"animalControl.hasError('required')\">Please choose an animal</mat-error>\r\n        <mat-hint>{{animalControl.value?.sound}}</mat-hint>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Select with a custom ErrorStateMatcher</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <mat-select placeholder=\"Choose one\" [formControl]=\"selected2\" [errorStateMatcher]=\"matcher\">\r\n          <mat-option>Clear</mat-option>\r\n          <mat-option value=\"valid\">Valid option</mat-option>\r\n          <mat-option value=\"invalid\">Invalid option</mat-option>\r\n        </mat-select>\r\n        <mat-hint>Errors appear instantly!</mat-hint>\r\n        <mat-error *ngIf=\"selected2.hasError('required')\">You must make a selection</mat-error>\r\n        <mat-error *ngIf=\"selected2.hasError('pattern') && !selected2.hasError('required')\">\r\n          Your selection is invalid\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Disabling the select or individual options</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <p>\r\n        <mat-checkbox [formControl]=\"disableSelect\">Disable select</mat-checkbox>\r\n      </p>\r\n      <p>\r\n        <mat-form-field>\r\n          <mat-select placeholder=\"Choose an option\" [disabled]=\"disableSelect.value\">\r\n            <mat-option value=\"option1\">Option 1</mat-option>\r\n            <mat-option value=\"option2\" disabled>Option 2 (disabled)</mat-option>\r\n            <mat-option value=\"option3\">Option 3</mat-option>\r\n          </mat-select>\r\n        </mat-form-field>\r\n      </p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Creating groups of options</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <mat-select placeholder=\"Pokemon\" [formControl]=\"pokemonControl\">\r\n          <mat-option>-- None --</mat-option>\r\n          <mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\" [disabled]=\"group.disabled\">\r\n            <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\r\n              {{pokemon.viewValue}}\r\n            </mat-option>\r\n          </mat-optgroup>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Multiple selection</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n          <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Multiple selection</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <mat-form-field>\r\n        <mat-select placeholder=\"Toppings\" [formControl]=\"toppings\" multiple>\r\n          <mat-select-trigger>\r\n            {{toppings.value ? toppings.value[0] : ''}}\r\n            <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\r\n              (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\r\n            </span>\r\n          </mat-select-trigger>\r\n          <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-datepicker',\r\n  templateUrl: './datepicker.component.html',\r\n  styleUrls: ['./datepicker.component.scss']\r\n})\r\nexport class DatepickerComponent implements OnInit {\r\n  startDate = new Date(1990, 0, 1);\r\n  date = new FormControl(this.getMonthYearString(new Date()));\r\n  minDate = new Date();\r\n  maxDate = new Date();\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    const today = new Date();\r\n    this.minDate.setDate(today.getDate() - 1);\r\n    this.maxDate.setDate(today.getDate() + 6);\r\n  }\r\n\r\n  chosenYearHandler(normalizedYear: Date) {\r\n    const ctrlValue = this.getDateFromString(this.date.value);\r\n    ctrlValue.setFullYear(normalizedYear.getFullYear());\r\n    this.date.setValue(this.getMonthYearString(ctrlValue));\r\n  }\r\n\r\n  chosenMonthHandler(normlizedMonth: Date, datepicker: MatDatepicker<Date>) {\r\n    const ctrlValue = this.getDateFromString(this.date.value);\r\n    ctrlValue.setMonth(normlizedMonth.getMonth());\r\n    this.date.setValue(this.getMonthYearString(ctrlValue));\r\n    datepicker.close();\r\n  }\r\n\r\n  private getMonthYearString(date: Date): string {\r\n    return `${date.getMonth() + 1}/${date.getFullYear()}`;\r\n  }\r\n  private getDateFromString(s: string): Date {\r\n    if ((s.match(/\\//g) || []).length !== 1) {\r\n      return new Date();\r\n    }\r\n    if (isNaN(+s.replace('/', ''))) {\r\n      return new Date();\r\n    }\r\n    const [mm, yyyy] = s.split('/');\r\n    return new Date(+yyyy, +mm + 1, 1);\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutAlign=\"space-around stretch\">\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Basic datepicker</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Datepicker start date</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Year and month picker</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"dp\" placeholder=\"Month and Year\" [formControl]=\"date\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\r\n        <mat-datepicker #dp\r\n                        startView=\"multi-year\"\r\n                        (yearSelected)=\"chosenYearHandler($event)\"\r\n                        (monthSelected)=\"chosenMonthHandler($event, dp)\"\r\n                        panelClass=\"example-month-picker\">\r\n        </mat-datepicker>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n    <mat-card-footer><p>Not yet completed</p></mat-card-footer>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Datepicker selected value</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <app-selected-value></app-selected-value>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Datepicker with min & max validation</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <mat-form-field class=\"example-full-width\">\r\n        <input matInput [min]=\"minDate\" [max]=\"maxDate\" [matDatepicker]=\"pickerv\" placeholder=\"Choose a date\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"pickerv\"></mat-datepicker-toggle>\r\n        <mat-datepicker #pickerv></mat-datepicker>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Input Disabled</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"dp3\" placeholder=\"Choose a date\" readonly=\"true\" (click)=\"dp3.open()\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\r\n        <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-selected-value',\r\n  templateUrl: './selected-value.component.html',\r\n  styleUrls: ['./selected-value.component.scss']\r\n})\r\nexport class SelectedValueComponent implements OnInit {\r\n  date = new FormControl(new Date());\r\n  serializedDate = new FormControl((new Date()).toISOString());\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<mat-form-field>\r\n  <input matInput [matDatepicker]=\"picker1\" placeholder=\"Angular forms\" [formControl]=\"date\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker1></mat-datepicker>\r\n</mat-form-field>\r\n\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"picker2\" placeholder=\"Angular forms (w/ deserialization)\"\r\n         [formControl]=\"serializedDate\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker2></mat-datepicker>\r\n</mat-form-field>\r\n\r\n<mat-form-field>\r\n  <input matInput [matDatepicker]=\"picker3\" placeholder=\"Value binding\" [value]=\"date.value\">\r\n  <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\r\n  <mat-datepicker #picker3></mat-datepicker>\r\n</mat-form-field>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AutoCompleteComponent } from './auto-complete/auto-complete.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { InputsComponent } from './inputs/inputs.component';\r\nimport { OtherComponent } from './other/other.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: 'autocomplete'\r\n      },\r\n      {\r\n        path: 'autocomplete',\r\n        component: AutoCompleteComponent\r\n      },\r\n      {\r\n        path: 'datepicker',\r\n        component: DatepickerComponent\r\n      },\r\n      {\r\n        path: 'checkbox',\r\n        component: CheckboxComponent\r\n      },\r\n      {\r\n        path: 'slider',\r\n        component: SliderComponent\r\n      },\r\n      {\r\n        path: 'inputs',\r\n        component: InputsComponent\r\n      },\r\n      {\r\n        path: 'other',\r\n        component: OtherComponent\r\n      },\r\n      {\r\n        path: '**',\r\n        redirectTo: 'autocomplete'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class FormsRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { FormsModule as FormModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\nimport { FormsRoutingModule } from './forms-routing.module';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AutoCompleteComponent } from './auto-complete/auto-complete.component';\r\nimport { DatepickerComponent } from './datepicker/datepicker.component';\r\nimport { CheckboxComponent } from './checkbox/checkbox.component';\r\nimport { SliderComponent } from './slider/slider.component';\r\nimport { InputsComponent } from './inputs/inputs.component';\r\nimport { OtherComponent } from './other/other.component';\r\nimport { StatesGroupComponent } from './auto-complete/states-group/states-group.component';\r\nimport { SelectedValueComponent } from './datepicker/selected-value/selected-value.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    FormsRoutingModule,\r\n    FormModule,\r\n    ReactiveFormsModule,\r\n    FlexLayoutModule,\r\n    MatTabsModule,\r\n    MatAutocompleteModule,\r\n    MatSlideToggleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatIconModule\r\n  ],\r\n  declarations: [\r\n    HomeComponent,\r\n    AutoCompleteComponent,\r\n    DatepickerComponent,\r\n    CheckboxComponent,\r\n    SliderComponent,\r\n    InputsComponent,\r\n    OtherComponent,\r\n    StatesGroupComponent,\r\n    SelectedValueComponent\r\n  ]\r\n})\r\nexport class FormsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nclass NavLink {\r\n  constructor(public path: string, public label: string) {}\r\n}\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  navLinks: NavLink[] = [];\r\n  constructor() {}\r\n  ngOnInit() {\r\n    this.navLinks = [\r\n      new NavLink('autocomplete', 'Autocomplete'),\r\n      new NavLink('datepicker', 'Datepicker'),\r\n      new NavLink('checkbox', 'Checkbox'),\r\n      new NavLink('slider', 'Slider'),\r\n      new NavLink('inputs', 'Inputs'),\r\n      new NavLink('other', 'Other Form Fields')\r\n    ];\r\n  }\r\n}\r\n","<section class=\"bg-white mat-elevation-z10\" style=\"min-height: 80vh;\">\r\n  <mat-tab-group routerTabs>\r\n    <mat-tab *ngFor=\"let link of navLinks\" [routerLink]=\"link.path\" [label]=\"link.label\">\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n  <router-outlet style=\"padding: 12px;\"></router-outlet>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroupDirective,\r\n  NgForm,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nclass MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(\r\n    control: FormControl | null,\r\n    form: FormGroupDirective | NgForm | null\r\n  ): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(\r\n      control &&\r\n      control.invalid &&\r\n      (control.dirty || control.touched || isSubmitted)\r\n    );\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inputs',\r\n  templateUrl: './inputs.component.html',\r\n  styleUrls: ['./inputs.component.scss']\r\n})\r\nexport class InputsComponent implements OnInit {\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutAlign=\"space-around stretch\">\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Basic Inputs</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <form class=\"example-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Favorite food\" value=\"Sushi\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"example-full-width\">\r\n          <textarea matInput placeholder=\"Leave a comment\" rows=\"4\"></textarea>\r\n        </mat-form-field>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Input with a custom ErrorStateMatcher</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <form class=\"example-form\">\r\n        <mat-form-field class=\"example-full-width\">\r\n          <input matInput placeholder=\"Email\" [formControl]=\"emailFormControl\" [errorStateMatcher]=\"matcher\">\r\n          <mat-hint>Errors appear instantly!</mat-hint>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('email') && !emailFormControl.hasError('required')\">\r\n            Please enter a valid email address\r\n          </mat-error>\r\n          <mat-error *ngIf=\"emailFormControl.hasError('required')\">\r\n            Email is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </form>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  FormControl,\r\n  Validators\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-other',\r\n  templateUrl: './other.component.html',\r\n  styleUrls: ['./other.component.scss']\r\n})\r\nexport class OtherComponent implements OnInit {\r\n  options: FormGroup;\r\n  email = new FormControl('', [Validators.required, Validators.email]);\r\n  hide = true;\r\n\r\n  constructor(fb: FormBuilder) {\r\n    this.options = fb.group({\r\n      hideRequired: false,\r\n      floatLabel: 'auto'\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  getErrorMessage() {\r\n    return this.email.hasError('required')\r\n      ? 'You must enter a value'\r\n      : this.email.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutAlign=\"space-around stretch\">\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Form field appearance variants</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <p>\r\n        <mat-form-field appearance=\"legacy\">\r\n          <mat-label>Legacy form field</mat-label>\r\n          <input matInput placeholder=\"Placeholder\">\r\n          <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n          <mat-hint>Hint</mat-hint>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field appearance=\"standard\">\r\n          <mat-label>Standard form field</mat-label>\r\n          <input matInput placeholder=\"Placeholder\">\r\n          <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n          <mat-hint>Hint</mat-hint>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field appearance=\"fill\">\r\n          <mat-label>Fill form field</mat-label>\r\n          <input matInput placeholder=\"Placeholder\">\r\n          <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n          <mat-hint>Hint</mat-hint>\r\n        </mat-form-field>\r\n      </p>\r\n      <p>\r\n        <mat-form-field appearance=\"outline\">\r\n          <mat-label>Outline form field</mat-label>\r\n          <input matInput placeholder=\"Placeholder\">\r\n          <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\r\n          <mat-hint>Hint</mat-hint>\r\n        </mat-form-field>\r\n      </p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Input with a custom ErrorStateMatcher</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <div class=\"example-container\">\r\n        <form class=\"example-container\" [formGroup]=\"options\">\r\n          <mat-checkbox formControlName=\"hideRequired\">Hide required marker</mat-checkbox>\r\n          <div>\r\n            <label>Float label: </label>\r\n            <mat-radio-group formControlName=\"floatLabel\">\r\n              <mat-radio-button value=\"auto\">Auto</mat-radio-button>\r\n              <mat-radio-button value=\"always\">Always</mat-radio-button>\r\n              <mat-radio-button value=\"never\">Never</mat-radio-button>\r\n            </mat-radio-group>\r\n          </div>\r\n        </form>\r\n\r\n        <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\" [floatLabel]=\"options.value.floatLabel\">\r\n          <input matInput placeholder=\"Simple placeholder\" required>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [floatLabel]=\"options.value.floatLabel\">\r\n          <mat-label>Both a label and a placeholder</mat-label>\r\n          <input matInput placeholder=\"Simple placeholder\">\r\n        </mat-form-field>\r\n\r\n        <mat-form-field [hideRequiredMarker]=\"options.value.hideRequired\" [floatLabel]=\"options.value.floatLabel\">\r\n          <mat-select required>\r\n            <mat-option>-- None --</mat-option>\r\n            <mat-option value=\"option\">Option</mat-option>\r\n          </mat-select>\r\n          <mat-label>\r\n            <mat-icon>favorite</mat-icon>\r\n            <b> Fancy</b>\r\n            <i> label</i>\r\n          </mat-label>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex=\"90\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>MFK</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"mfk\">\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 50px;\">\r\n        <mat-label>Fund</mat-label>\r\n        <input matInput type=\"number\" maxlength=\"3\" placeholder=\"000\" oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 40px;\">\r\n        <mat-label>Org</mat-label>\r\n        <input matInput maxlength=\"2\" placeholder=\"00\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 56px;\">\r\n        <mat-label>Dept</mat-label>\r\n        <input matInput maxlength=\"4\" placeholder=\"0000\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 60px;\">\r\n        <mat-label>Subdept</mat-label>\r\n        <input matInput maxlength=\"5\" placeholder=\"00000\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 90px;\">\r\n        <mat-label>Grant/Pgm</mat-label>\r\n        <input matInput maxlength=\"8\" placeholder=\"00000000\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 56px;\">\r\n        <mat-label>Iact</mat-label>\r\n        <input matInput maxlength=\"4\" placeholder=\"0000\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 60px;\">\r\n        <mat-label>Dact</mat-label>\r\n        <input matInput maxlength=\"5\" placeholder=\"00000\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 40px;\">\r\n        <mat-label>Fn</mat-label>\r\n        <input matInput maxlength=\"2\" placeholder=\"00\">\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\" style=\"width: 56px;\">\r\n        <mat-label>Cctr</mat-label>\r\n        <input matInput maxlength=\"4\" placeholder=\"0000\">\r\n      </mat-form-field>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Form field with hints or error messages</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <div class=\"example-container\">\r\n        <mat-form-field hintLabel=\"Max 10 characters\">\r\n          <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\r\n          <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <mat-select placeholder=\"Select me\">\r\n            <mat-option value=\"option\">Option</mat-option>\r\n          </mat-select>\r\n          <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\r\n          <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Form field with prefix & suffix</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <div class=\"example-container\">\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\r\n          <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field>\r\n          <input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\r\n          <span matPrefix>$&nbsp;</span>\r\n          <span matSuffix>.00</span>\r\n        </mat-form-field>\r\n      </div>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-slider',\r\n  templateUrl: './slider.component.html',\r\n  styleUrls: ['./slider.component.scss']\r\n})\r\nexport class SliderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  formatLabel(value: number | null) {\r\n    if (!value) {\r\n      return 0;\r\n    }\r\n\r\n    if (value >= 1000) {\r\n      return Math.round(value / 1000) + 'k';\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n","<div fxLayout=\"row wrap\" fxLayout.lt-sm=\"column\" fxLayoutAlign=\"space-around stretch\">\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Basic slider</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <mat-slider min=\"1\" max=\"5\" step=\"0.5\" value=\"1.5\"></mat-slider>\r\n\r\n      <mat-slider vertical></mat-slider>\r\n\r\n      <mat-slider thumbLabel tickInterval=\"1\"></mat-slider>\r\n\r\n      <mat-slider step=\"5\" tickInterval=\"1\"></mat-slider>\r\n\r\n      <mat-slider thumbLabel [displayWith]=\"formatLabel\" tickInterval=\"1000\" min=\"1\" max=\"100000\"></mat-slider>\r\n    </mat-card-content>\r\n  </mat-card>\r\n\r\n  <mat-card fxFlex.gt-xs=\"40\" class=\"mb15\">\r\n    <mat-card-header>\r\n      <mat-card-title>Basic slide-toggles</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content class=\"\">\r\n      <p>\r\n        <mat-slide-toggle>Slide me!</mat-slide-toggle>\r\n      </p>\r\n      <p>\r\n        <mat-slide-toggle color=\"primary\">Slide me!</mat-slide-toggle>\r\n      </p>\r\n      <p>\r\n        <mat-slide-toggle color=\"warning\">Slide me!</mat-slide-toggle>\r\n      </p>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false }),\n});\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true,\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nconst _MatSlideToggleBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = this.defaultColor = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n    }\n    /** Whether the slide-toggle is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlideToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-checked\": \"checked\", \"class.mat-disabled\": \"disabled\", \"class.mat-slide-toggle-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-slide-toggle\" }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_thumbEl\", first: true, predicate: [\"thumbContainer\"], descendants: true }, { propertyName: \"_thumbBarEl\", first: true, predicate: [\"toggleBar\"], descendants: true }, { propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', exportAs: 'matSlideToggle', host: {\n                        'class': 'mat-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-checked]': 'checked',\n                        '[class.mat-disabled]': 'disabled',\n                        '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <div #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked.toString()\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <div class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <div class=\\\"mat-slide-toggle-thumb\\\"></div>\\n      <div class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <div class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></div>\\n      </div>\\n    </div>\\n\\n  </div>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;-moz-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _thumbEl: [{\n                type: ViewChild,\n                args: ['thumbContainer']\n            }], _thumbBarEl: [{\n                type: ViewChild,\n                args: ['toggleBar']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatSlideToggleRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.1.0\", type: MatSlideToggleRequiredValidator, selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\", providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                    providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatSlideToggleRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] });\n_MatSlideToggleRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatSlideToggleRequiredValidator],\n                    declarations: [MatSlideToggleRequiredValidator],\n                }]\n        }] });\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSlideToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggleModule, declarations: [MatSlideToggle], imports: [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule], exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule] });\nMatSlideToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggleModule, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.1.0\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        _MatSlideToggleRequiredValidatorModule,\n                        MatRippleModule,\n                        MatCommonModule,\n                        ObserversModule,\n                    ],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule],\n                    declarations: [MatSlideToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n"],"names":["i3","ObserversModule","i0","InjectionToken","forwardRef","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","Inject","Optional","ViewChild","Input","Output","Directive","NgModule","i2","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","MatRippleModule","MatCommonModule","coerceBooleanProperty","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","ANIMATION_MODULE_TYPE","i1","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","providedIn","factory","disableToggleValue","nextUniqueId","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","provide","useExisting","MatSlideToggle","multi","MatSlideToggleChange","constructor","source","checked","_MatSlideToggleBase","_elementRef","elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","animationMode","_onChange","_","_onTouched","_uniqueId","_required","_checked","name","id","labelPosition","ariaLabel","ariaLabelledby","change","toggleChange","parseInt","color","defaultColor","_noopAnimations","required","value","markForCheck","inputId","ngAfterContentInit","monitor","subscribe","focusOrigin","Promise","resolve","then","ngOnDestroy","stopMonitoring","_onChangeEvent","event","stopPropagation","emit","_inputElement","nativeElement","_emitChangeEvent","_onInputClick","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","focus","options","origin","focusVia","toggle","_onLabelTextChange","detectChanges","ɵfac","ElementRef","FocusMonitor","ChangeDetectorRef","ɵcmp","MatRipple","CdkObserveContent","type","args","selector","exportAs","host","providers","inputs","encapsulation","None","changeDetection","OnPush","template","styles","undefined","decorators","_thumbEl","_thumbBarEl","ariaDescribedby","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","ɵdir","_MatSlideToggleRequiredValidatorModule","ɵmod","ɵinj","exports","declarations","MatSlideToggleModule","imports"],"sourceRoot":"webpack:///"}